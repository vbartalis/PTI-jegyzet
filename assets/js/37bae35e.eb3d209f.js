"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7474],{3905:(e,t,a)=>{a.d(t,{Zo:()=>z,kt:()=>p});var l=a(7294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function k(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,l,s=function(e,t){if(null==e)return{};var a,l,s={},n=Object.keys(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var r=l.createContext({}),o=function(e){var t=l.useContext(r),a=t;return e&&(a="function"==typeof e?e(t):k(k({},t),e)),a},z=function(e){var t=o(e.components);return l.createElement(r.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},g=l.forwardRef((function(e,t){var a=e.components,s=e.mdxType,n=e.originalType,r=e.parentName,z=i(e,["components","mdxType","originalType","parentName"]),g=o(a),p=s,d=g["".concat(r,".").concat(p)]||g[p]||m[p]||n;return a?l.createElement(d,k(k({ref:t},z),{},{components:a})):l.createElement(d,k({ref:t},z))}));function p(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=a.length,k=new Array(n);k[0]=g;var i={};for(var r in t)hasOwnProperty.call(t,r)&&(i[r]=t[r]);i.originalType=e,i.mdxType="string"==typeof e?e:s,k[1]=i;for(var o=2;o<n;o++)k[o]=a[o];return l.createElement.apply(null,k)}return l.createElement.apply(null,a)}g.displayName="MDXCreateElement"},5723:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>k,default:()=>m,frontMatter:()=>n,metadata:()=>i,toc:()=>o});var l=a(7462),s=(a(7294),a(3905));const n={sidebar_position:6},k="6. T\xe9tel: Szoftverfejleszt\xe9si m\xf3dszertanok",i={unversionedId:"exam/informatika/variant-3/6",id:"exam/informatika/variant-3/6",title:"6. T\xe9tel: Szoftverfejleszt\xe9si m\xf3dszertanok",description:"A m\xf3dszertanok feladata, hogy meghat\xe1rozz\xe1k, hogy a szoftver \xe9letciklus egyes l\xe9p\xe9sei milyen sorrendben k\xf6vetik egym\xe1st, milyen dokumentumokat,",source:"@site/docs/exam/informatika/variant-3/6.mdx",sourceDirName:"exam/informatika/variant-3",slug:"/exam/informatika/variant-3/6",permalink:"/docs/exam/informatika/variant-3/6",draft:!1,editUrl:"https://github.com/vbartalis/vbartalis.github.io/tree/master/docs/exam/informatika/variant-3/6.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"5. T\xe9tel: Programoz\xe1si technol\xf3gi\xe1k",permalink:"/docs/exam/informatika/variant-3/5"},next:{title:"7. T\xe9tel: Web",permalink:"/docs/exam/informatika/variant-3/7"}},r={},o=[{value:"Hagyom\xe1nyos szoftverfejleszt\xe9si m\xf3dszertanok",id:"hagyom\xe1nyos-szoftverfejleszt\xe9si-m\xf3dszertanok",level:2},{value:"V\xedzes\xe9s modell (Waterfall Model)",id:"v\xedzes\xe9s-modell-waterfall-model",level:3},{value:"V-modell",id:"v-modell",level:3},{value:"Spir\xe1lis fejleszt\xe9si modell",id:"spir\xe1lis-fejleszt\xe9si-modell",level:3},{value:"Protot\xedpus alap\xfa fejleszt\xe9s",id:"protot\xedpus-alap\xfa-fejleszt\xe9s",level:3},{value:"Iterat\xedv \xe9s inkrement\xe1lis m\xf3dszertanok",id:"iterat\xedv-\xe9s-inkrement\xe1lis-m\xf3dszertanok",level:3},{value:"Gyors alkalmaz\xe1sfejleszt\xe9s - RAD",id:"gyors-alkalmaz\xe1sfejleszt\xe9s---rad",level:3},{value:"Agilis szoftverfejleszt\xe9si m\xf3dszertanok",id:"agilis-szoftverfejleszt\xe9si-m\xf3dszertanok",level:2},{value:"Az agilis szoftverfejleszt\xe9s alapjai",id:"az-agilis-szoftverfejleszt\xe9s-alapjai",level:3},{value:"Az agilis ki\xe1ltv\xe1ny",id:"az-agilis-ki\xe1ltv\xe1ny",level:3},{value:"Scrum",id:"scrum",level:3},{value:"Szerepk\xf6r\xf6k",id:"szerepk\xf6r\xf6k",level:4},{value:"Megbesz\xe9l\xe9sek",id:"megbesz\xe9l\xe9sek",level:4},{value:"Term\xe9kek",id:"term\xe9kek",level:4},{value:"Tov\xe1bbi inform\xe1ci\xf3k",id:"tov\xe1bbi-inform\xe1ci\xf3k",level:2}],z={toc:o};function m(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,l.Z)({},z,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"6-t\xe9tel-szoftverfejleszt\xe9si-m\xf3dszertanok"},"6. T\xe9tel: Szoftverfejleszt\xe9si m\xf3dszertanok"),(0,s.kt)("p",null,"A m\xf3dszertanok feladata, hogy meghat\xe1rozz\xe1k, hogy a szoftver \xe9letciklus egyes l\xe9p\xe9sei milyen sorrendben k\xf6vetik egym\xe1st, milyen dokumentumokat,\nszoftver term\xe9keket kell el\u0151\xe1ll\xedtani \xe9s hogyan. Egy nagy szab\xe1lyk\xf6nyvre eml\xe9keztetnek, ami pontosan le\xedrja, hogyan kell szoftvert \u201ef\u0151zni\u201d.\nHa betartjuk a receptet, akkor egy \xe1tlagos min\u0151s\xe9g\u0171 szoftvert kapunk, de az \xe1tlagos min\u0151s\xe9g garant\xe1lt."),(0,s.kt)("p",null,"A szoftverfejleszt\xe9s \xe9letciklus\xe1ban megjelen\u0151 \xe1ltal\xe1nos feladatok a k\xf6vetkez\u0151k:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"K\xf6vetelm\xe9nyek megfogalmaz\xe1sa - funkcion\xe1lis specifik\xe1ci\xf3"),(0,s.kt)("li",{parentName:"ol"},"Rendszertervez\xe9s (design) - rendszerterv"),(0,s.kt)("li",{parentName:"ol"},"K\xf3dol\xe1s, testreszab\xe1s \xe9s tesztel\xe9s"),(0,s.kt)("li",{parentName:"ol"},"Bevezet\xe9s")),(0,s.kt)("p",null,"A szoftverfolyamat modellje a szoftverfolyamat absztrakt reprezent\xe1ci\xf3ja. Minden egyes modell k\xfcl\xf6nb\xf6z\u0151 speci\xe1lis perspekt\xedv\xe1b\xf3l reprezent\xe1l egy folyamatot,\nde ily m\xf3don csak r\xe9szleges inform\xe1ci\xf3val szolg\xe1lhat mag\xe1r\xf3l a folyamatr\xf3l. Ezek az \xe1ltal\xe1nos modellek nem a szoftverfolyamat pontos, v\xe9gleges le\xedr\xe1sai,\nhanem val\xf3j\xe1ban ink\xe1bb hasznos absztrakci\xf3k, amelyet a szoftverfejleszt\xe9s k\xfcl\xf6nb\xf6z\u0151 megk\xf6zel\xedt\xe9si m\xf3djainak meg\xe9rt\xe9s\xe9hez haszn\xe1lhatunk.\nAz irodalomban sz\xe1mos szoftverfejleszt\xe9si modell alakult ki az \xe9vek sor\xe1n \xe9s tal\xe1lhat\xf3 meg, melyekb\u0151l a legismertebb folyamatmodelleket fogjuk a tov\xe1bbiakban t\xe1rgyalni."),(0,s.kt)("p",null,"A modellek haszn\xe1lata azonban kor\xe1ntsem kiz\xe1r\xf3lagos. S\u0151t, tal\xe1n ki is jelenthetj\xfck, hogy kev\xe9s olyan v\xe1llalat van, aki csup\xe1n egy modellt haszn\xe1l folyamatainak le\xedr\xe1s\xe1hoz.\nA gyakorlatban ink\xe1bb el\u0151szeretettel alkalmaznak t\xf6bb fejleszt\xe9si modellt egyszerre, f\u0151k\xe9nt nagy, komplex rendszerek fejleszt\xe9sekor.\nEbben az esetben legf\u0151bb c\xe9l mindig az, hogy az adott fejleszt\xe9si k\xf6rnyezet mellett a modellek a k\xf6rnyezetre vet\xedtett el\u0151ny\u0151s tulajdons\xe1gaikat emelj\xe9k ki,\n\xe9s adopt\xe1lj\xe1k az adott k\xf6rnyezetre."),(0,s.kt)("h2",{id:"hagyom\xe1nyos-szoftverfejleszt\xe9si-m\xf3dszertanok"},"Hagyom\xe1nyos szoftverfejleszt\xe9si m\xf3dszertanok"),(0,s.kt)("h3",{id:"v\xedzes\xe9s-modell-waterfall-model"},"V\xedzes\xe9s modell (Waterfall Model)"),(0,s.kt)("p",null,"A szoftverfejleszt\xe9s t\xf6rt\xe9net\xe9nek els\u0151 publik\xe1lt modellje, amely m\xe1s tervez\u0151i modellekb\u0151l sz\xe1rmazik.\nAz elnevez\xe9se onnan fakad, hogy a fejleszt\xe9sben felmer\xfcl\u0151 tev\xe9kenys\xe9geket j\xf3l elv\xe1laszthat\xf3 l\xe9p\xe9sekben, l\xe9pcs\u0151sen \xe1br\xe1zolja, ami alapj\xe1n v\xedzes\xe9smodellk\xe9nt v\xe1lt ismertt\xe9."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Waterfall",src:a(8943).Z,width:"1558",height:"1162"})),(0,s.kt)("p",null,"A modell alapvet\u0151 szakaszai alapvet\u0151 fejleszt\xe9si tev\xe9kenys\xe9gekre k\xe9pezhet\u0151k le. Ezek:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"K\xf6vetelm\xe9nyek elemz\xe9se \xe9s meghoz\xe1sa"),(0,s.kt)("li",{parentName:"ol"},"Rendszer \xe9s szoftvertervez\xe9s"),(0,s.kt)("li",{parentName:"ol"},"Implement\xe1ci\xf3 \xe9s egys\xe9gteszt"),(0,s.kt)("li",{parentName:"ol"},"Integr\xe1ci\xf3 \xe9s rendszerteszt"),(0,s.kt)("li",{parentName:"ol"},"M\u0171k\xf6dtet\xe9s \xe9s karbantart\xe1s")),(0,s.kt)("admonition",{title:"K\xf6vetelm\xe9nyek elemz\xe9se \xe9s meghoz\xe1sa",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"A rendszer szolg\xe1ltat\xe1sai, megszor\xedt\xe1sai \xe9s c\xe9lja a rendszer felhaszn\xe1l\xf3ival t\xf6rt\xe9n\u0151 konzult\xe1ci\xf3 alapj\xe1n alakul ki. Ezeket k\xe9s\u0151bb r\xe9szletesen kifejtik, \xe9s ezek szolg\xe1ltatj\xe1k a rendszer specifik\xe1ci\xf3t.")),(0,s.kt)("admonition",{title:"Rendszer \xe9s szoftvertervez\xe9s",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"A rendszer tervez\xe9si folyamat\xe1ban v\xe1laszt\xf3dnak sz\xe9t a hardver- \xe9s szoftverk\xf6vetelm\xe9nyek. Itt kell kialak\xedtani a rendszer \xe1tfog\xf3 architekt\xfar\xe1j\xe1t. A szoftver tervez\xe9se az alapvet\u0151 szoftverrendszer-absztrakci\xf3k, illetve a k\xf6z\xf6tt\xfck lev\u0151 kapcsolatok azonos\xedt\xe1s\xe1t \xe9s le\xedr\xe1s\xe1t is mag\xe1ban foglalja.")),(0,s.kt)("admonition",{title:"Implement\xe1ci\xf3 \xe9s egys\xe9gteszt",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"Ebben a szakaszban a szoftverterv programok, illetve programegys\xe9gek halmazak\xe9nt realiz\xe1l\xf3dik. Az egys\xe9gteszt azt ellen\u0151rzi, hogy minden egys\xe9g megfelel-e a specifik\xe1ci\xf3j\xe1nak.")),(0,s.kt)("admonition",{title:"Integr\xe1ci\xf3 \xe9s rendszerteszt",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"Megt\xf6rt\xe9nik a k\xfcl\xf6n\xe1ll\xf3 programegys\xe9gek, illetve programok integr\xe1l\xe1sa \xe9s teljes rendszerk\xe9nt val\xf3 tesztel\xe9se, hogy a rendszer megfelel-e a k\xf6vetelm\xe9nyeknek. A tesztel\xe9s ut\xe1n a szoftverrendszer \xe1tadhat\xf3 az \xfcgyf\xe9lnek.")),(0,s.kt)("admonition",{title:"M\u0171k\xf6dtet\xe9s \xe9s karbantart\xe1s",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"\xc1ltal\xe1ban ez a szoftver \xe9letciklus\xe1nak leghosszabb f\xe1zisa. Megt\xf6rt\xe9nt a rendszertelep\xedt\xe9s \xe9s megt\xf6rt\xe9nt a rendszer gyakorlati haszn\xe1latbav\xe9tele. A karbantart\xe1sba beletartozik az olyan hib\xe1k jav\xedt\xe1sa, amelyekre nem der\xfclt f\xe9ny az \xe9letciklus kor\xe1bbi szakaszaiban, a rendszeregys\xe9gek implement\xe1ci\xf3j\xe1nak tov\xe1bbfejleszt\xe9se, valamint a rendszer szolg\xe1ltat\xe1sainak tov\xe1bbfejleszt\xe9se a felmer\xfcl\u0151 \xfaj k\xf6vetelm\xe9nyeknek megfelel\u0151en.")),(0,s.kt)("p",null,"A f\xe1zisok eredm\xe9nye tulajdonk\xe9ppen egy dokumentum. A modell fontos szab\xe1lya, hogy a k\xf6vetkez\u0151 f\xe1zis addig nem indulhat el, am\xedg az el\u0151z\u0151 f\xe1zis be nem fejez\u0151d\xf6tt.\nA gyakorlatban persze ezek a szakaszok kiss\xe9 \xe1tfedhetik egym\xe1st. Maga a szoftverfolyamat nem egyszer\u0171 line\xe1ris modell, hanem a fejleszt\xe9si tev\xe9kenys\xe9gek iter\xe1ci\xf3j\xe1nak sorozata.\nEz a v\xedzes\xe9smodelln\xe9l a visszacsatol\xe1sokban jelenik meg."),(0,s.kt)("p",null,"A dokumentumok el\u0151\xe1ll\xedt\xe1s\xe1nak k\xf6lts\xe9g\xe9b\u0151l ad\xf3d\xf3an az iter\xe1ci\xf3k k\xf6lts\xe9gesek, \xe9s jelent\u0151s \xe1tdolgoz\xe1st ig\xe9nyelnek. Ez\xe9rt megszokott, hogy m\xe1r kissz\xe1m\xfa iter\xe1ci\xf3 ut\xe1n\nis befagyasztj\xe1k az adott fejleszt\xe9si f\xe1zist, \xe9s a fejleszt\xe9st k\xe9s\u0151bbi f\xe1zisokkal folytatj\xe1k. A probl\xe9m\xe1k felold\xe1s\xe1t k\xe9s\u0151bbre halasztj\xe1k, kihagyj\xe1k vagy kiker\xfclik azokat.\nA k\xf6vetelm\xe9nyek ilyen id\u0151 el\u0151tti befagyaszt\xe1sa oda vezethet, hogy a rendszer nem azt fogja tenni, mint amit a felhaszn\xe1l\xf3 akart."),(0,s.kt)("p",null,"Az \xe9letciklus utols\xf3 szakasz\xe1ban a felhaszn\xe1l\xf3k haszn\xe1latba veszik a szoftvert. Ilyenkor der\xfclnek ki az eredeti rendszerk\xf6vetelm\xe9nyek hib\xe1i \xe9s hi\xe1nyoss\xe1gai.\nProgram \xe9s tervez\xe9si hib\xe1k ker\xfclnek el\u0151, tov\xe1bb\xe1 felmer\xfclhet \xfaj funkci\xf3k sz\xfcks\xe9gess\xe9ge is. Ezekb\u0151l ad\xf3d\xf3an a rendszert \xe1t kell alak\xedtani, amely n\xe9h\xe1ny vagy\nak\xe1r az \xf6sszes kor\xe1bbi folyamatszakasz megism\xe9tl\xe9s\xe9vel is j\xe1rhat."),(0,s.kt)("p",null,"A v\xedzes\xe9smodell legf\u0151bb probl\xe9m\xe1j\xe1t a projekt szakaszainak k\xfcl\xf6n\xe1ll\xf3 r\xe9szekk\xe9 t\xf6rt\xe9n\u0151 nem flexibilis part\xedcion\xe1l\xe1sa okozza. Egy komplex, bonyolult probl\xe9ma\nmegold\xe1sa nem v\xe9gezhet\u0151 el hat\xe9konyan ezzel a megk\xf6zel\xedt\xe9ssel. A v\xedzes\xe9smodell csak akkor haszn\xe1lhat\xf3 j\xf3l, ha m\xe1r el\u0151re j\xf3l ismerj\xfck a k\xf6vetelm\xe9nyeket,\nmelyeket r\xe9szletes \xe9s pontos specifik\xe1ci\xf3 k\xf6vet."),(0,s.kt)("h3",{id:"v-modell"},"V-modell"),(0,s.kt)("p",null,"A V-modell (angolul: V-Model vagy Vee Model) a nev\xe9t onnan kapta, hogy k\xe9t sz\xe1ra van \xe9s \xedgy egy V bet\u0171h\xf6z hasonl\xedt. Az egyik sz\xe1ra megegyezik a v\xedzes\xe9s modellel. Ez a fejleszt\xe9si sz\xe1r. A m\xe1sik sz\xe1ra a l\xe9trej\xf6v\u0151 term\xe9kek tesztjeit tartalmazza. Ez a tesztel\xe9si sz\xe1r. Az egy szinten l\xe9v\u0151 fejleszt\xe9si \xe9s tesztel\xe9si l\xe9p\xe9sek \xf6sszetartoznak, azaz a tesztel\xe9si l\xe9p\xe9s a fejleszt\xe9si l\xe9p\xe9s sor\xe1n l\xe9trej\xf6tt dokumentumokat haszn\xe1lja, vagy a l\xe9trej\xf6tt term\xe9ket teszteli."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"V",src:a(9013).Z,width:"2137",height:"1582"})),(0,s.kt)("p",null,"A V-modell a v\xedzes\xe9s modell kieg\xe9sz\xedt\xe9se tesztel\xe9ssel. Ez azt jelenti, hogy el\u0151sz\xf6r v\xe9gre kell hajtani a fejleszt\xe9s l\xe9p\xe9seit, ezut\xe1n j\xf6nnek a tesztel\xe9s l\xe9p\xe9sei. Ha valamelyik teszt hib\xe1t tal\xe1l, akkor vissza kell menni a megfelel\u0151 fejleszt\xe9si l\xe9p\xe9sre."),(0,s.kt)("p",null,"A V-modell hasonl\xf3an a v\xedzes\xe9s modellhez nagyon merev, de alkalmaz\xf3i kev\xe9sb\xe9 ragaszkodnak ehhez a merevs\xe9ghez, mint a v\xedzes\xe9s modell alkalmaz\xf3i. Ennek megfelel\u0151en jobban elterjedt. F\u0151 jellemz\u0151je a teszt k\xf6zponti szerepe."),(0,s.kt)("p",null,"Egy tipikus V-modell v\xe1ltozatban el\u0151sz\xf6r felm\xe9rj\xfck az ig\xe9nyeket \xe9s elk\xe9sz\xedtj\xfck a k\xf6vetelm\xe9ny specifik\xe1ci\xf3t. Ezt \xfczleti elemz\u0151k v\xe9gzik, akik a megrendel\u0151 \xe9s a fejleszt\u0151k fej\xe9vel is k\xe9pesek gondolkozni. A k\xf6vetelm\xe9ny specifik\xe1ci\xf3ban j\xf3l meghat\xe1rozott \xe1tv\xe9teli krit\xe9riumokat fogalmaznak meg, amik lehetnek funkcion\xe1lis \xe9s nemfunkcion\xe1lis ig\xe9nyek is. Ez lesz majd az alapja a felhaszn\xe1l\xf3i \xe1tv\xe9teli tesztnek (User Acceptance Test, UAT). Mag\xe1t a k\xf6vetelm\xe9ny specifik\xe1ci\xf3t is tesztelik. A felhaszn\xe1l\xf3k t\xfczetesen \xe1tn\xe9zik az \xfczleti elemz\u0151k seg\xedts\xe9g\xe9vel, hogy t\xe9nylegesen minden ig\xe9ny\xfcket lefedi-e a dokumentum. Ez l\xe9nyeges r\xe9sze a modellnek, mert a folyamatban visszafel\xe9 haladni nem lehet, \xe9s ha rossz a k\xf6vetelm\xe9ny specifik\xe1ci\xf3, akkor nem az ig\xe9nyeknek megfelel\u0151 szoftver fog elk\xe9sz\xfclni. Ezzel szemben p\xe9ld\xe1ul a protot\xedpus modellben lehet pongyola az ig\xe9nyfelm\xe9r\xe9s, mert az a protot\xedpusok sor\xe1n \xfagyis pontos\xedt\xe1sra ker\xfcl."),(0,s.kt)("p",null,"Ezut\xe1n k\xf6vetkezik a funkcion\xe1lis specifik\xe1ci\xf3 elk\xe9sz\xedt\xe9se, amely le\xedrja, hogyan kell majd m\u0171k\xf6dnie a szoftvernek. Ez lesz a rendszerteszt alapja. Ha a funkcion\xe1lis specifik\xe1ci\xf3 azt \xedrja, hogy a \u201eV\xe1s\xe1rol gomb megnyom\xe1s\xe1ra ki kell \xedrni a kos\xe1rban l\xe9v\u0151 \xe1ruk \xe9rt\xe9k\xe9t\u201d, akkor a rendszertesztben lesz egy vagy t\xf6bb teszteset, amely ezt teszteli. P\xe9ld\xe1ul, ha \xfcres a kos\xe1r, akkor az \xe1rnak null\xe1nak kell lennie."),(0,s.kt)("p",null,"Ezut\xe1n k\xf6vetkezik a rendszerterv, amely le\xedrja, hogy az egyes funkci\xf3kat hogyan, milyen komponensekkel, oszt\xe1lyokkal, met\xf3dusokkal, adatb\xe1zissal fogjuk megval\xf3s\xedtani. Ez lesz a komponens teszt egyik alapja. A rendszerterv le\xedrja tov\xe1bb, hogy a komponensek hogyan m\u0171k\xf6dnek egy\xfctt. Ez lesz az integr\xe1ci\xf3s teszt alapja."),(0,s.kt)("p",null,"Ezut\xe1n a rendszertervnek megfelel\u0151en k\xf6vetkezik az implement\xe1ci\xf3. Minden met\xf3dushoz egy vagy t\xf6bb unit-tesztet kell k\xe9sz\xedteni. Ezek alapja nem csak az implement\xe1ci\xf3, hanem a rendszerterv is. A nagyobb egys\xe9geket, oszt\xe1lyokat, al- \xe9s f\u0151funkci\xf3kat is komponens teszt al\xe1 kell vetni az implement\xe1ci\xf3 \xe9s a rendszerterv alapj\xe1n."),(0,s.kt)("p",null,"Ha ezen sikeresen t\xfal vagyunk, akkor az integr\xe1ci\xf3s teszt k\xf6vetkezik a rendszerterv alapj\xe1n. Ha itt probl\xe9m\xe1k mer\xfclnek fel, akkor visszamegy\xfcnk a V bet\u0171 m\xe1sik sz\xe1r\xe1ra a rendszertervhez. Megn\xe9zz\xfck, hogy a hiba a rendszertervben vagy az implement\xe1ci\xf3ban van-e. Ha kell, megv\xe1ltoztatjuk a rendszertervet, majd az implement\xe1ci\xf3t is."),(0,s.kt)("p",null,"Az integr\xe1ci\xf3s teszt ut\xe1n j\xf6n a rendszerteszt a funkcion\xe1lis specifik\xe1ci\xf3 alapj\xe1n. Hasonl\xf3an, hiba eset\xe9n a V bet\u0171 m\xe1sik sz\xe1r\xe1ra megy\xfcnk, azaz visszal\xe9p\xfcnk a funkcion\xe1lis specifik\xe1ci\xf3 elk\xe9sz\xedt\xe9s\xe9re. Majd j\xf6n az \xe1tv\xe9teli teszt a k\xf6vetelm\xe9ny specifik\xe1ci\xf3 alapj\xe1n. Rem\xe9lhet\u0151leg itt m\xe1r nem lesz hiba, mert kezdhetn\xe9nk az eg\xe9szet el\xf6lr\u0151l, ami egyenl\u0151 a sikertelen projekttel."),(0,s.kt)("p",null,"Ha a fejleszt\xe9s \xe9s tesztel\xe9s alatt nem v\xe1ltoznak a k\xf6vetelm\xe9nyek, akkor ez egy nagyon j\xf3, kiforrott, t\xe1mogatott m\xf3dszertan. Ha val\xf3sz\xedn\u0171 a k\xf6vetelm\xe9nyek v\xe1ltoz\xe1sa, akkor ink\xe1bb iterat\xedv, vagy m\xe9g ink\xe1bb agilis m\xf3dszert v\xe1lasszunk."),(0,s.kt)("h3",{id:"spir\xe1lis-fejleszt\xe9si-modell"},"Spir\xe1lis fejleszt\xe9si modell"),(0,s.kt)("p",null,"A spir\xe1lis fejleszt\xe9si modellt Boehm javasolta el\u0151sz\xf6r m\xe1r 1986-ban a \u201eA Spiral Model of Software Development and Enhancement\u201d c\xedmmel megjelent publik\xe1ci\xf3j\xe1ban, amely az\xf3ta sz\xe9les k\xf6rben elterjedt az irodalomban \xe9s a gyakorlatban is. A modell alapgondolata szint\xe9n elt\xe9r az eddigiekt\u0151l, mert a szoftverfolyamatot nem tev\xe9kenys\xe9gek \xe9s k\xf6z\xf6tt\xfck tal\xe1lhat\xf3 esetleg visszal\xe9p\xe9sek sorozatak\xe9nt tekinti, hanem ink\xe1bb egy spir\xe1lk\xe9nt reprezent\xe1lja. A spir\xe1l minden egyes k\xf6rben a szoftverfolyamat egy-egy f\xe1zis\xe1t reprezent\xe1lja. A spir\xe1lnak, mint a folyamatot reprezent\xe1l\xf3 vonalnak egy tov\xe1bbi sugallnival\xf3ja is van. M\xe9gpedig az, hogy tetsz\u0151leges sz\xe1m\xfa k\xf6r, mint iter\xe1ci\xf3 tehet\u0151 meg."),(0,s.kt)("p",null,"A legbels\u0151 k\xf6r a megval\xf3s\xedthat\xf3s\xe1ggal foglalkozik, a k\xf6vetkez\u0151 a rendszer k\xf6vetelm\xe9nyeinek meghat\xe1roz\xe1sa, a k\xf6vetkez\u0151 k\xf6r pedig a rendszer tervez\xe9s\xe9vel foglalkozik, \xe9s \xedgy tov\xe1bb."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Spiral",src:a(8376).Z,width:"1920",height:"1600"})),(0,s.kt)("p",null,"A spir\xe1l minden egyes ciklus\xe1t n\xe9gy f\u0151 szektorra oszthatjuk fel:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"C\xe9lok kijel\xf6l\xe9se: az adott projektf\xe1zis \xe1ltal kit\u0171z\xf6tt c\xe9lok meghat\xe1roz\xe1sa. Azonos\xedtani kell a folyamat megszor\xedt\xe1sait, a term\xe9ket, fel kell v\xe1zolni a kapcsol\xf3d\xf3 menedzsel\xe9si tervet. Fel kell ismerni a projekt kock\xe1zati t\xe9nyez\u0151it, \xe9s azokt\xf3l f\xfcgg\u0151en alternat\xedv strat\xe9gi\xe1kat kell tervezni ha lehets\xe9ges."),(0,s.kt)("li",{parentName:"ol"},"Kock\xe1zat becsl\xe9se: minden egyes felismert kock\xe1zati t\xe9nyez\u0151 eset\xe9n r\xe9szletes elemz\xe9sre ker\xfcl sor. L\xe9p\xe9seket kell tenni a kock\xe1zat cs\xf6kkent\xe9se \xe9rdek\xe9ben."),(0,s.kt)("li",{parentName:"ol"},"Fejleszt\xe9s \xe9s valid\xe1l\xe1s: a kock\xe1zat ki\xe9rt\xe9kel\xe9se ut\xe1n egy fejleszt\xe9si modellt kell v\xe1lasztani a probl\xe9m\xe1nak megfelel\u0151en. Pl. evol\xfaci\xf3s, v\xedzes\xe9s, stb modellek."),(0,s.kt)("li",{parentName:"ol"},"Tervez\xe9s: A folyamat azon f\xe1zisa, amikor d\xf6nteni kell arr\xf3l, hogy folytat\xf3djon-e egy k\xf6vetkez\u0151 ciklussal, vagy sem. Ha a folytat\xe1s mellett d\xf6nt\xfcnk, akkor fel kell v\xe1zolni a projekt k\xf6vetkez\u0151 f\xe1zis\xe1t.")),(0,s.kt)("p",null,"Egy spir\xe1lciklus mindig a c\xe9lok meghat\xe1roz\xe1s\xe1val kezd\u0151dik. Ekkor fel kell sorolni a megval\xf3s\xedt\xe1s lehet\u0151s\xe9geit, \xe9s meg kell vizsg\xe1lni azok megszor\xedt\xe1sait is. Minden egyes c\xe9lhoz meg kell hat\xe1rozni egy lehets\xe9ges alternat\xedv\xe1t, amely azt eredm\xe9nyezi, hogy azonos\xedt\xe1sra ker\xfclnek a projekt kock\xe1zati forr\xe1sai is. A k\xf6vetkez\u0151 l\xe9p\xe9s ezeknek a kock\xe1zatoknak a ki\xe9rt\xe9kel\xe9se, majd v\xe9g\xfcl pedig a tervez\xe9si f\xe1zis k\xf6vetkezik, ahol eld\xf6nthetj\xfck, hogy sz\xfcks\xe9g van-e egy tov\xe1bbi ciklusra vagy sem."),(0,s.kt)("p",null,"Miben m\xe1s a spir\xe1lis fejleszt\xe9si modell az egy\xe9b szoftverfolyamat-modellt\u0151l? Itt a modell explicite sz\xe1mol a kock\xe1zati t\xe9nyez\u0151kkel, amelyek probl\xe9m\xe1kat okozhatnak a projektben. Ilyen p\xe9ld\xe1ul a hat\xe1rid\u0151- \xe9s k\xf6lts\xe9gt\xfall\xe9p\xe9sek. A modell egy tipikus alkalmaz\xe1si ter\xfclete napjainkban a j\xe1t\xe9kfejleszt\xe9s ipar\xe1ga, m\xe9gpedig az\xe9rt, mert a mai vezet\u0151 sz\xe1m\xedt\xf3g\xe9pes j\xe1t\xe9kok nagyon komplex, sok embert ig\xe9nyl\u0151 szoftverfejleszt\xe9si folyamat, ahol gyakran kell hat\xe1rid\u0151cs\xfasz\xe1sokkal is sz\xe1molni."),(0,s.kt)("h3",{id:"protot\xedpus-alap\xfa-fejleszt\xe9s"},"Protot\xedpus alap\xfa fejleszt\xe9s"),(0,s.kt)("p",null,"A protot\xedpus modell v\xe1lasz a v\xedzes\xe9s modell sikertelens\xe9g\xe9re. A fejleszt\u0151 c\xe9gek r\xe1j\xf6ttek, hogy tarthatatlan a v\xedzes\xe9s modell megk\xf6zel\xedt\xe9se, hogy a rendszerrel a felhaszn\xe1l\xf3 csak a projekt v\xe9g\xe9n tal\xe1lkozik. Gyakran csak ekkor der\xfclt ki, hogy az \xe9letciklus elej\xe9n f\xe9lre\xe9rtett\xe9k egym\xe1st a felek \xe9s nem a val\xf3s k\xf6vetelm\xe9nyeknek megfelel\u0151 rendszer sz\xfcletett. Ezt elker\xfclend\u0151 a protot\xedpus modell azt mondja, hogy a v\xe9gs\u0151 \xe1tad\xe1s el\u0151tt t\xf6bb protot\xedpust is sz\xe1ll\xedtsunk le, hogy mihamarabb kider\xfcljenek a f\xe9lre\xe9rt\xe9sek, illetve a megrendel\u0151 l\xe1ssa, mit v\xe1rhat a rendszert\u0151l."),(0,s.kt)("p",null,"A protot\xedpus alap\xfa megk\xf6zel\xedt\xe9se a fejleszt\xe9snek azon alapszik, hogy a megrendel\u0151 \xfczleti folyamatai, k\xf6vetelm\xe9nyei nem ismerhet\u0151k meg teljesen. M\xe1r csak az\xe9rt sem, mert ezek az id\u0151vel v\xe1ltoznak (l\xe1sd az agilis m\xf3dszertanokat). A k\xf6vetelm\xe9nyeket \xe9rdemes finom\xedtani protot\xedpusok seg\xedts\xe9g\xe9vel. Ha a felhaszn\xe1l\xf3 haszn\xe1latba vesz egy protot\xedpust, akkor k\xe9pes megfogalmazni, hogy az mi\xe9rt nem felel meg az elv\xe1r\xe1sainak \xe9s hogyan kellene megv\xe1ltoztatni. Ebben a megk\xf6zel\xedt\xe9sben a lesz\xe1ll\xedtott rendszer is egy protot\xedpus."),(0,s.kt)("p",null,"Ez a megk\xf6zel\xedt\xe9s annyira sikeres volt, hogy a modern m\xf3dszertanok majd mindegyike protot\xedpus alap\xfa. Az iterat\xedv m\xf3dszerek \xe1ltal\xe1ban minden m\xe9rf\xf6ldk\u0151h\xf6z k\xf6tnek egy protot\xedpust. Az agilis m\xf3dszertanok ak\xe1r minden nap \xfaj (l\xe1sd napi ford\xedt\xe1s) protot\xedpust \xe1ll\xedtanak el\u0151."),(0,s.kt)("p",null,"A kezdeti protot\xedpus fejleszt\xe9se \xe1ltal\xe1ban a k\xf6vetkez\u0151 l\xe9p\xe9sekb\u0151l \xe1ll:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"1. l\xe9p\xe9s"),": Az alap k\xf6vetelm\xe9nyek meghat\xe1roz\xe1sa: Olyan alap k\xf6vetelm\xe9nyek meghat\xe1roz\xe1sa, mint a bemeneti \xe9s kimeneti adatok. \xc1ltal\xe1ban a teljes\xedtm\xe9nyre vagy a biztons\xe1gra vonatkoz\xf3 k\xf6vetelm\xe9nyekkel nem foglalkozunk."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"2. l\xe9p\xe9s"),": Kezdeti protot\xedpus kifejleszt\xe9se: Csak a felhaszn\xe1l\xf3i fel\xfcleteket fejlesztj\xfck le egy erre alkalmas CASE eszk\xf6zzel. A m\xf6g\xf6tte l\xe9v\u0151 funkci\xf3kat nem, kiv\xe9ve az \xfaj ablakok nyit\xe1s\xe1t."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"3. l\xe9p\xe9s"),": Bemutat\xe1s: Ez egyfajta felhaszn\xe1l\xf3i \xe1tv\xe9teli teszt. A v\xe9gfelhaszn\xe1l\xf3k megvizsg\xe1lj\xe1k a protot\xedpust, \xe9s jelzik, hogy mit gondolnak m\xe1sk\xe9nt, illetve mit tenn\xe9nek m\xe9g hozz\xe1."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"4. l\xe9p\xe9s"),": A k\xf6vetelm\xe9nyek pontos\xedt\xe1sa: A visszajelz\xe9seket felhaszn\xe1lva pontos\xedtjuk a k\xf6vetelm\xe9ny specifik\xe1ci\xf3t. Ha m\xe9g mindig nem el\xe9g pontos a specifik\xe1ci\xf3, akkor a protot\xedpust tov\xe1bbfejlesztj\xfck \xe9s ugrunk a 3. l\xe9p\xe9sre. Ha el\xe9g pontos k\xe9pet kaptunk arr\xf3l, hogy mit is akar a megrendel\u0151, akkor az egyes m\xf3dszertanok m\xe1st \xe9s m\xe1st \xedrnak el\u0151.")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Prototipe",src:a(7518).Z,width:"1750",height:"1141"})),(0,s.kt)("p",null,"A protot\xedpus k\xe9sz\xedt\xe9st akkor a legc\xe9lszer\u0171bb haszn\xe1lni, ha a rendszer \xe9s a felhaszn\xe1l\xf3 k\xf6z\xf6tt sok lesz a p\xe1rbesz\xe9d. A modell on-line rendszerek elemz\xe9s\xe9ben \xe9s tervez\xe9s\xe9ben nagyon hat\xe9kony, k\xfcl\xf6n\xf6sen a tranzakci\xf3 feldolgoz\xe1sn\xe1l. Olyan rendszerekn\xe9l, ahol kev\xe9s interakci\xf3 zajlik a rendszer \xe9s a felhaszn\xe1l\xf3 k\xf6z\xf6tt, ott kev\xe9sb\xe9 \xe9ri meg a protot\xedpus modell haszn\xe1lata, ilyenek p\xe9ld\xe1ul a sz\xe1m\xedt\xe1s ig\xe9nyes feladatok. K\xfcl\xf6n\xf6sen j\xf3l haszn\xe1lhat\xf3 a felhaszn\xe1l\xf3i fel\xfclet kialak\xedt\xe1s\xe1n\xe1l."),(0,s.kt)("p",null,"A protot\xedpus modell nagyban \xe9p\xedt a tesztel\xe9sre. Minden protot\xedpust felhaszn\xe1l\xf3i \xe1tv\xe9teli tesztnek vetnek al\xe1, ami sor\xe1n k\xf6nnyen kider\xfcl, hogy milyen funkcion\xe1lis \xe9s nemfunkcion\xe1lis k\xf6vetelm\xe9nyt nem tart be a protot\xedpus. A korai szakaszban sok unit-tesztet alkalmazunk. Amikor befejez\xfcnk egy \xfajabb protot\xedpust, akkor regresszi\xf3s teszttel vizsg\xe1ljuk meg, hogy ami az el\u0151z\u0151 protot\xedpusban m\u0171k\xf6d\xf6tt, az tov\xe1bbiakban is m\u0171k\xf6dik-e. Ha az \xfaj protot\xedpusban van \xfaj komponens is, akkor a r\xe9gi \xe9s az \xfaj komponensek k\xf6z\xf6tt, illetve az \xfaj \u2013 \xfaj komponensek k\xf6z\xf6tt integr\xe1ci\xf3s tesztet kell v\xe9grehajtani. A modell k\xe9s\u0151bbi szakasz\xe1ban, miut\xe1n m\xe1r a k\xf6vetelm\xe9ny \xe9s a funkcion\xe1lis specifik\xe1ci\xf3 letisztult, egy v\xedzes\xe9s modellre hasonl\xedt. Azaz az implement\xe1ci\xf3 ut\xe1n j\xf6n a tesztel\xe9s. Ekkor elv\xe9gezz\xfck \xfajb\xf3l komponens \xe9s integr\xe1ci\xf3s teszteket is. Rendszertesztet \xe1ltal\xe1ban csak a v\xe9gs\u0151 protot\xedpus \xe1tad\xe1s el\u0151tt v\xe9gz\xfcnk."),(0,s.kt)("h3",{id:"iterat\xedv-\xe9s-inkrement\xe1lis-m\xf3dszertanok"},"Iterat\xedv \xe9s inkrement\xe1lis m\xf3dszertanok"),(0,s.kt)("p",null,"Az iterat\xedv m\xf3dszertan el\u0151\xedrja, hogy a fejleszt\xe9st, kezdve az ig\xe9nyfelm\xe9r\xe9st\u0151l az \xfczemeltet\xe9sig, kisebb iter\xe1ci\xf3k sorozat\xe1ra bontsuk. Elt\xe9r\u0151en a v\xedzes\xe9s modellt\u0151l, amelyben p\xe9ld\xe1ul a tervez\xe9s teljesen megel\u0151zni az implement\xe1ci\xf3t, itt minden iter\xe1ci\xf3ban van tervez\xe9s \xe9s implement\xe1ci\xf3i is. Lehet, hogy valamelyik iter\xe1ci\xf3ban az egyik sokkal hangs\xfalyosabb, mint a m\xe1sik, de ez term\xe9szetes."),(0,s.kt)("p",null,"A folyamatos finom\xedt\xe1s lehet\u0151v\xe9 teszi, hogy m\xe9lyen meg\xe9rts\xfck a feladatot \xe9s felder\xedts\xfck az ellentmond\xe1sokat. Minden iter\xe1ci\xf3 kieg\xe9sz\xedti a m\xe1r kifejlesztett protot\xedpust. A kieg\xe9sz\xedt\xe9st inkrementumnak is nevezz\xfck. Azok a m\xf3dszertanok, amik a folyamatra teszik a hangs\xfalyt, azaz az iter\xe1ci\xf3ra, azokat iterat\xedv m\xf3dszertanoknak nevezz\xfck. Azokat, amelyek az iter\xe1ci\xf3 term\xe9k\xe9re, az inkrementumra teszik a hangs\xfalyt, azokat inkrement\xe1lis m\xf3dszertanoknak h\xedvjuk. A mai m\xf3dszertanok nagy r\xe9sze, kezdve a protot\xedpus modellt\u0151l eg\xe9szen az agilis modellekig, ebbe a csal\xe1dba tartoznak."),(0,s.kt)("p",null,"A kieg\xe9sz\xedt\xe9s hozz\xe1ad\xe1s\xe1val n\xf6vekv\u0151 r\xe9szrendszer j\xf6n l\xe9tre, amelyet tesztelni kell. Az \xfaj k\xf3dot unit-teszttel tesztelj\xfck. Regresszi\xf3s teszttel kell ellen\u0151rizni, hogy a r\xe9gi k\xf3d tov\xe1bbra is m\u0171k\xf6dik-e az \xfaj k\xf3d hozz\xe1ad\xe1sa \xe9s a v\xe1ltoz\xe1sok ut\xe1n. Az \xfaj \xe9s a r\xe9gi k\xf3d egy\xfcttm\u0171k\xf6d\xe9s\xe9t integr\xe1ci\xf3s teszttel tesztelj\xfck. Ha egy m\xe9rf\xf6ldk\u0151h\xf6z vagy protot\xedpus bemutat\xe1shoz \xe9rkez\xfcnk, akkor van felhaszn\xe1l\xf3i \xe1tv\xe9teli teszt is. Egy\xe9bk\xe9nt csak egy bels\u0151 \xe1tv\xe9teli teszt van az iter\xe1ci\xf3 v\xe9g\xe9n."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Inkremental",src:a(9976).Z,width:"1735",height:"1102"}),"\n",(0,s.kt)("img",{alt:"Inkremental-2",src:a(9344).Z,width:"2116",height:"892"})),(0,s.kt)("p",null,"Ezt a megk\xf6zel\xedt\xe9st t\xf6bb m\xf3dszertan is alkalmazza, p\xe9ld\xe1ul a protot\xedpus modell, a gyors alkalmaz\xe1sfejleszt\xe9s (RAD), a Rational Unified Process (RUP) \xe9s az agilis fejleszt\xe9si modellek. Itt ezeknek a m\xf3dszertanoknak a k\xf6z\xf6s r\xe9sz\xe9t, az iter\xe1ci\xf3t ismertetj\xfck. Egy iter\xe1ci\xf3 a k\xf6vetkez\u0151 feladatokb\xf3l \xe1ll:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"\xdczleti folyamatok elemz\xe9se"),(0,s.kt)("li",{parentName:"ol"},"K\xf6vetelm\xe9nyelemz\xe9s"),(0,s.kt)("li",{parentName:"ol"},"Elemz\xe9s \xe9s tervez\xe9s"),(0,s.kt)("li",{parentName:"ol"},"Implement\xe1ci\xf3"),(0,s.kt)("li",{parentName:"ol"},"Tesztel\xe9s"),(0,s.kt)("li",{parentName:"ol"},"\xc9rt\xe9kel\xe9s")),(0,s.kt)("p",null,"Az iterat\xedv modell f\u0151 ereje abban rejlik, hogy az \xe9letciklus l\xe9p\xe9sei nem egym\xe1s ut\xe1n j\xf6nnek, mint a struktur\xe1lt m\xf3dszertanok eset\xe9n, hanem id\u0151ben \xe1tfedik egym\xe1st. Minden iter\xe1ci\xf3ban van elemz\xe9s, tervez\xe9s, implement\xe1ci\xf3 \xe9s tesztel\xe9s. Ez\xe9rt, ha tal\xe1lunk egy f\xe9lre\xe9rt\xe9st, akkor nem kell visszal\xe9pni, hanem n\xe9h\xe1ny iter\xe1ci\xf3 seg\xedts\xe9g\xe9vel oldjuk fel a f\xe9lre\xe9rt\xe9st. Ez az jelenti, hogy kev\xe9sb\xe9 tervezhet\u0151 a fejleszt\xe9s ideje, de j\xf3l alkalmazkodik az ig\xe9nyek v\xe1ltoz\xe1s\xe1hoz."),(0,s.kt)("p",null,"Mivel a fejleszt\xe9s l\xe9p\xe9seit mindig ism\xe9telgetj\xfck, ez\xe9rt azt mondjuk, hogy ezek id\u0151ben \xe1tfedik egym\xe1st, hiszen minden szakaszban minden l\xe9p\xe9st v\xe9gre kell hajtani. A kezdeti iter\xe1ci\xf3kban t\xf6bb az elemz\xe9s, a v\xe9g\xe9hez k\xf6zeledve egyre t\xf6bb a tesztel\xe9s. M\xe1r a legels\u0151 szakaszban is van tesztel\xe9s, de ekkor m\xe9g csak a teszttervet k\xe9sz\xedtj\xfck. M\xe1r a legels\u0151 szakaszban is van implement\xe1ci\xf3, de ekkor m\xe9g csak az architekt\xfara oszt\xe1lyait hozzuk l\xe9tre. \xc9s \xedgy tov\xe1bb."),(0,s.kt)("p",null,"A feladatot t\xf6bb iter\xe1ci\xf3ra bontjuk. Ezeket \xe1ltal\xe1ban t\xf6bb kisebb csapat implement\xe1lja egym\xe1ssal versengve. Aki gyorsabb, az v\xe1laszthat iter\xe1ci\xf3t a megl\xe9v\u0151k k\xf6z\xfcl. A v\xe1laszt\xe1s nem teljesen szabad, a legnagyobb priorit\xe1s\xfa feladatok k\xf6z\xfcl kell v\xe1lasztani. A priorit\xe1s meghat\xe1roz\xe1sa k\xfcl\xf6nb\xf6z\u0151 lehet, \xe1ltal\xe1ban a leggyorsabban megval\xf3s\xedthat\xf3 \xe9s legnagyobb \xfczleti \xe9rt\xe9k\u0171, azaz a legnagyobb \xfczleti megt\xe9r\xfcl\xe9ssel (angolul: return of investment) b\xedr\xf3 feladat a legnagyobb priorit\xe1s\xfa."),(0,s.kt)("p",null,"\xdczleti folyamatok elemz\xe9se: Els\u0151 l\xe9p\xe9sben meg kell ismerni a megrendel\u0151 \xfczleti folyamatait. Az \xfczleti folyamatok modellez\xe9se sor\xe1n fel kell \xe1ll\xedtani egy projekt fogalomt\xe1rat. A lemodellezett \xfczleti folyamatokat egyeztetni kell a megrendel\u0151vel, hogy ellen\u0151rizz\xfck j\xf3l \xe9rtj\xfck-e az \xfczleti logik\xe1t. Ezt \xfczleti elemz\u0151k v\xe9gzik, akik a megrendel\u0151k \xe9s a fejleszt\u0151k fej\xe9vel is k\xe9pesek gondolkozni."),(0,s.kt)("p",null,"K\xf6vetelm\xe9nyelemz\xe9s: A k\xf6vetelm\xe9ny elemz\xe9s sor\xe1n meghat\xe1rozzuk a rendszer funkcion\xe1lis \xe9s nemfunkcion\xe1lis k\xf6vetelm\xe9nyeit, majd ezekb\u0151l funkci\xf3kat, k\xe9perny\u0151terveket k\xe9sz\xedt\xfcnk. Ez a l\xe9p\xe9s az eg\xe9sz fejleszt\xe9s elej\xe9n nagyon hangs\xfalyos, hiszen a kezdeti iter\xe1ci\xf3k c\xe9lja a k\xf6vetelm\xe9nyek fel\xe1ll\xedt\xe1sa. K\xe9s\u0151bbiekben csak a funkcion\xe1lis terv finom\xedt\xe1sa a feladata. Fontos, hogy a k\xf6vetelm\xe9nyeket egyeztess\xfck a megrendel\u0151kkel. Ha a finom\xedt\xe1s sor\xe1n ellentmond\xe1st fedez\xfcnk fel, akkor \xe9rdemes tiszt\xe1zni a k\xe9rd\xe9st a megrendel\u0151vel."),(0,s.kt)("p",null,"Elemz\xe9s \xe9s tervez\xe9s: Az elemz\xe9s \xe9s tervez\xe9s sor\xe1n a k\xf6vetelm\xe9ny elemz\xe9s term\xe9keib\u0151l megpr\xf3b\xe1ljuk elemezni a rendszert \xe9s megtervezni azt. A nemfunkcion\xe1lis k\xf6vetelm\xe9nyekb\u0151l lesz az architektur\xe1lis terv. Az architektur\xe1lis terv alapj\xe1n tervezz\xfck az alrendszereket \xe9s a k\xf6zt\xfck lev\u0151 kapcsolatokat. Ez a kezdeti iter\xe1ci\xf3k feladata. A funkcion\xe1lis k\xf6vetelm\xe9nyek alapj\xe1n tervezz\xfck meg az oszt\xe1lyokat, met\xf3dusokat \xe9s az adatt\xe1bl\xe1kat. Ezek a k\xe9s\u0151bbi iter\xe1ci\xf3k feladatai."),(0,s.kt)("p",null,"Implement\xe1ci\xf3: Az implement\xe1ci\xf3s szakaszra ritk\xe1n adnak megszor\xedt\xe1st az iterat\xedv m\xf3dszertanok. \xc1ltal\xe1ban a bevett technik\xe1k alkalmaz\xe1s\xe1t aj\xe1nlj\xe1k, illetve szerepk\xf6r\xf6ket \xedrnak el\u0151. Pl.: a fejleszt\u0151k fejlesztik a rendszert, a fejleszt\u0151k szoros kapcsolatban vannak a tervez\u0151kkel, tov\xe1bb\xe1 van egy k\xf3d ellen\u0151r, aki ellen\u0151rzi, hogy a fejleszt\u0151k \xe1ltal \xedrt programok megfelelnek-e a tervez\u0151k \xe1ltal kital\xe1lt tervez\xe9si \xe9s programoz\xe1si ir\xe1nyelveknek. Ebben a szakaszban a programoz\xf3k unit-teszttel biztos\xedtj\xe1k a k\xf3d min\u0151s\xe9g\xe9t."),(0,s.kt)("p",null,"Tesztel\xe9s: A tesztel\xe9si szakaszban k\xfcl\xf6nb\xf6z\u0151 tesztel\xe9si eseteket tal\xe1lunk ki, ezeket unit-tesztk\xe9nt val\xf3s\xedtjuk meg. Itt vizsg\xe1ljuk meg, hogy az elk\xe9sz\xfclt k\xf3d k\xe9pes-e egy\xfcttm\u0171k\xf6dni a program t\xf6bbi r\xe9sz\xe9vel, azaz integr\xe1ci\xf3s tesztet hajtunk v\xe9gre. Regresszi\xf3s tesztek seg\xedts\xe9g\xe9vel ellen\u0151rizz\xfck, hogy ami eddig k\xe9sz volt, az nem romlott el. Ehhez lefuttatjuk az \xf6sszes unit-tesztet. Rendszerteszt csak a k\xe9s\u0151i tesztel\xe9si f\xe1zisokban van."),(0,s.kt)("p",null,"\xc9rt\xe9kel\xe9s: A fejleszt\xe9s minden ciklus\xe1ban el kell d\xf6nteni, hogy az elk\xe9sz\xfclt verzi\xf3t elfogadjuk-e, vagy sem. Ha nem, akkor \xfajra indul ez az iter\xe1ci\xf3. Ha igen, v\xe9ge ennek az iter\xe1ci\xf3nak. Az \xedgy elk\xe9sz\xfclt k\xf3dot felt\xf6ltj\xfck a verzi\xf3k\xf6vet\u0151 rendszerbe, hogy a t\xf6bbi csapat is hozz\xe1f\xe9rjen. Az \xe9rt\xe9kel\xe9s mag\xe1ban foglal egy \xe1tv\xe9teli tesztet is. Ha a megrendel\u0151 nem \xe1ll rendelkez\xe9sre, akkor \xe1ltal\xe1ban a csoportok munk\xe1j\xe1t \xf6sszefog\xf3 vezet\u0151 programoz\xf3 / tervez\u0151 helyettes\xedti. Amennyiben a folyamat sor\xe1n el\xe9rt\xfcnk egy m\xe9rf\xf6ldk\u0151h\xf6z, akkor \xe1ltal\xe1ban \xe1t kell adnunk egy k\xf6ztes protot\xedpust is. Ekkor mindig rendelkez\xe9sre \xe1ll a megrendel\u0151, hogy elv\xe9gezz\xfck a felhaszn\xe1l\xf3i \xe1tv\xe9teli tesztet."),(0,s.kt)("p",null,"T\xe1mogat\xf3 tev\xe9kenys\xe9gek, napi ford\xedt\xe1s: Az iter\xe1ci\xf3kt\xf3l f\xfcggetlen\xfcl \xfagynevezett t\xe1mogat\xf3 folyamatok is zajlanak a szoftver c\xe9gen bel\xfcl. Ilyen p\xe9ld\xe1ul a rendszergazd\xe1k vagy a menedzsment tev\xe9kenys\xe9ge. Az iter\xe1ci\xf3k szemsz\xf6g\xe9b\u0151l a legfontosabb az \xfagynevezett a napi ford\xedt\xe1s (daily build). Ez azt jelenti, hogy minden nap v\xe9g\xe9n a verzi\xf3k\xf6vet\u0151 rendszerben l\xe9v\u0151 forr\xe1sk\xf3dot leford\xedtjuk. Minden csapat igyekszik a megl\xe9v\u0151 k\xf3dhoz igaz\xedtani a saj\xe1tj\xe1t, hogy lehets\xe9ges legyen a ford\xedt\xe1s. Aki elrontja a napi ford\xedt\xe1st, \xe9s ezzel nehez\xedti az \xf6sszes csapat k\xf6vetkez\u0151 napi munk\xe1j\xe1t, az b\xfcntet\xe9sre sz\xe1m\xedthat. Ez a c\xe9g hagyom\xe1nyait\xf3l f\xfcgg, \xe1ltal\xe1ban egy h\xe9tig \u0151 csin\xe1lja a napi ford\xedt\xe1s \xe9s emiatt sokszor sok\xe1ig bent kell maradnia."),(0,s.kt)("p",null,"V\xe9g\xfcl vagy el\xe9rj\xfck azt a pontot, ahol azt mondjuk, hogy ez \xedgy nem elk\xe9sz\xedthet\u0151, vagy azt mondjuk, hogy minden felmer\xfclt ig\xe9nyt kiel\xe9g\xedt a szoftver\xfcnk \xe9s sz\xe1ll\xedthatjuk a megrendel\u0151nek."),(0,s.kt)("h3",{id:"gyors-alkalmaz\xe1sfejleszt\xe9s---rad"},"Gyors alkalmaz\xe1sfejleszt\xe9s - RAD"),(0,s.kt)("p",null,"A gyors alkalmaz\xe1sfejleszt\xe9s vagy ismertebb nev\xe9n RAD (Rapid Application Development) egy olyan elgondol\xe1s, amelynek l\xe9nyege a szoftver gyorsabb \xe9s jobb min\u0151s\xe9g\u0171 elk\xe9sz\xedt\xe9se. Ezt a k\xf6vetkez\u0151k \xe1ltal \xe9rhetj\xfck el:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Korai protot\xedpus k\xe9sz\xedt\xe9s \xe9s ism\xe9tl\u0151d\u0151 felhaszn\xe1l\xf3i \xe1tv\xe9teli tesztek."),(0,s.kt)("li",{parentName:"ol"},"A csapat - megrendel\u0151 \xe9s a csapaton bel\xfcli kommunik\xe1ci\xf3ban kev\xe9sb\xe9 form\xe1lis."),(0,s.kt)("li",{parentName:"ol"},"Szigor\xfa \xfctemterv, \xedgy az \xfaj\xedt\xe1sok mindig csak a term\xe9k k\xf6vetkez\u0151 verzi\xf3j\xe1ban jelennek meg."),(0,s.kt)("li",{parentName:"ol"},"K\xf6vetelm\xe9nyek \xf6sszegy\u0171jt\xe9se f\xf3kusz csoportok \xe9s munka\xe9rtekezletek haszn\xe1lat\xe1val."),(0,s.kt)("li",{parentName:"ol"},"Komponensek \xfajrahasznos\xedt\xe1sa.")),(0,s.kt)("p",null,"Ezekhez a folyamatokhoz t\xf6bb szoftvergy\xe1rt\xf3 is k\xe9sz\xedtett seg\xe9deszk\xf6z\xf6ket, melyek r\xe9szben vagy eg\xe9szben lefedik a fejleszt\xe9s f\xe1zisait, mint p\xe9ld\xe1ul:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"k\xf6vetelm\xe9ny \xf6sszegy\u0171jt\u0151 eszk\xf6z\xf6k,"),(0,s.kt)("li",{parentName:"ol"},"tervez\xe9st seg\xedt\u0151 eszk\xf6z\xf6k,"),(0,s.kt)("li",{parentName:"ol"},"protot\xedpus k\xe9sz\xedt\u0151 eszk\xf6z\xf6k,")),(0,s.kt)("p",null,"csapatok kommunik\xe1ci\xf3j\xe1t seg\xedt\u0151 eszk\xf6z\xf6k."),(0,s.kt)("p",null,"A RAD els\u0151sorban az objektumorient\xe1lt programoz\xe1ssal kapcsol\xf3dik \xf6ssze, m\xe1r csak a komponensek \xfajrahasznos\xedt\xe1sa ok\xe1n is. \xd6sszehasonl\xedtva a hagyom\xe1nyos fejleszt\xe9si met\xf3dusokkal (pl.: v\xedzes\xe9s modell), ahol az egyes fejleszt\xe9si f\xe1zisok j\xf3l elk\xfcl\xf6n\xfclnek egym\xe1st\xf3l, a RAD sokkal rugalmasabban. Gyakori probl\xe9ma, hogy a tervez\xe9sbe hiba cs\xfaszik, \xe9s az csak a megval\xf3s\xedt\xe1si vagy a tesztel\xe9si f\xe1zisban j\xf6n el\u0151, r\xe1ad\xe1sul az elemz\xe9s \xe9s a tesztel\xe9si f\xe1zis k\xf6z\xf6tt hat-h\xe9t h\xf3nap is eltelhet. Vagy ha menetk\xf6zbe megv\xe1ltoznak az \xfczleti k\xf6r\xfclm\xe9nyek, \xe9s m\xe1r a megval\xf3s\xedt\xe1si f\xe1zisban j\xe1runk, vagy csak r\xe1j\xf6ttek a megrendel\u0151k, hogy valamit m\xe9gis m\xe1sk\xe9ppen szeretn\xe9nek, akkor szint\xe9n gondban vagyunk. A RAD v\xe1lasza ezekre a probl\xe9m\xe1kra a gyorsas\xe1g. Ha gyorsan hozzuk l\xe9tre a rendszert, akkor ezen r\xf6vid id\u0151 alatt nem v\xe1ltoznak a k\xf6vetelm\xe9nyek, az elemz\xe9s \xe9s tesztel\xe9s k\xf6z\xf6tt nem hat-h\xe9t h\xf3nap, hanem csak hat-h\xe9t h\xe9t telik el."),(0,s.kt)("p",null,"A gyorsas\xe1g el\xe9r\xe9s\xe9hez sok megl\xe9v\u0151 komponenst kell felhaszn\xe1lni, amit a csapatnak j\xf3l kell ismernie. A komponensek lehetnek saj\xe1t fejleszt\xe9s\u0171ek vagy megv\xe1s\xe1roltak. Komponenst v\xe1s\xe1rolni nagy kock\xe1zat, mert ha hiba van benne, azt nem tudjuk jav\xedtani, ha nem kapjuk meg a forr\xe1st, de m\xe9g \xfagy is nagyon neh\xe9z. Ez\xe9rt a komponens gy\xe1rt\xf3k nagyon alaposan tesztelik term\xe9k\xfcket."),(0,s.kt)("p",null,"A RAD az elemz\xe9st, a tervez\xe9st, a megval\xf3s\xedt\xe1st, \xe9s a tesztel\xe9st r\xf6vid, ism\xe9tl\u0151d\u0151 ciklusok sorozat\xe1ba t\xf6m\xf6r\xedti, \xe9s ennek sok el\u0151nye van a hagyom\xe1nyos modellekkel szemben. A fejleszt\xe9s sor\xe1n \xe1ltal\xe1ban kis csoportokat hoznak l\xe9tre fejleszt\u0151kb\u0151l, v\xe9gfelhaszn\xe1l\xf3kb\xf3l, ez az \xfagynevezett f\xf3kusz csoport. Ezek a csapatok az ism\xe9tl\u0151d\u0151, r\xf6vid ciklusokkal vegy\xedtve hat\xe9konyabb\xe1 teszik a kommunik\xe1ci\xf3t, optimaliz\xe1lj\xe1k a fejleszt\xe9si sebess\xe9get, egys\xe9ges\xedtik az elk\xe9pzel\xe9seket \xe9s c\xe9lokat, valamint leegyszer\u0171s\xedtik a folyamat fel\xfcgyelet\xe9t."),(0,s.kt)("p",null,"\xd6t fejleszt\xe9si l\xe9p\xe9s a RAD-ban:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"\xdczleti modellez\xe9s"),": Az \xfczleti funkci\xf3k k\xf6z\xf6tti inform\xe1ci\xf3 \xe1raml\xe1st olyan k\xe9rd\xe9sek feltev\xe9s\xe9vel tudjuk felder\xedteni, mint hogy milyen inform\xe1ci\xf3k keletkeznek, ezeket ki \xe1ll\xedtja el\u0151, az \xfczleti folyamatot milyen inform\xe1ci\xf3k ir\xe1ny\xedtj\xe1k, vagy hogy ki ir\xe1ny\xedtja."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Adat modellez\xe9s"),": Az \xfczleti modellez\xe9ssel \xf6sszegy\u0171jt\xf6tt\xfck a sz\xfcks\xe9ges adatokat, melyekb\u0151l adat objektumokat hozunk l\xe9tre. Beazonos\xedtjuk az attrib\xfatumokat \xe9s a kapcsolatokat az adatok k\xf6z\xf6tt."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Folyamat modellez\xe9s"),": Az el\u0151z\u0151leg l\xe9trehozott adatmodellhez sz\xfcks\xe9ges m\u0171veletek (b\u0151v\xedt\xe9s, t\xf6rl\xe9s, m\xf3dos\xedt\xe1s) meghat\xe1roz\xe1sa, \xfagy hogy l\xe9trehozzuk a kell\u0151 inform\xe1ci\xf3\xe1raml\xe1st az \xfczleti funkci\xf3k sz\xe1m\xe1ra."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Alkalmaz\xe1s el\u0151\xe1ll\xedt\xe1sa"),": A szoftver el\u0151\xe1ll\xedt\xe1s\xe1nak megk\xf6nny\xedt\xe9se automatikus eszk\xf6z\xf6kkel."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Tesztel\xe9s"),": Az \xfaj programkomponensek tesztel\xe9se, a m\xe1r kor\xe1bban tesztelt komponenseket m\xe1r nem sz\xfcks\xe9ges \xfajra vizsg\xe1lni. Ez gyors\xedtja a folyamatot.")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Gyors",src:a(3187).Z,width:"2335",height:"1081"})),(0,s.kt)("p",null,"H\xe1tr\xe1nya, hogy magasan k\xe9pzett fejleszt\u0151kre van sz\xfcks\xe9g, emellett fontos a fejleszt\u0151k \xe9s a v\xe9gfelhaszn\xe1l\xf3k elk\xf6telezetts\xe9ge a sikeres szoftver ir\xe1nt. Ha a projekt nehezen bonthat\xf3 fel modulokra, akkor nem a legjobb v\xe1laszt\xe1s a RAD. Nagyobb rendszerek fejleszt\xe9se ezzel a m\xf3dszertannal kock\xe1zatos."),(0,s.kt)("h2",{id:"agilis-szoftverfejleszt\xe9si-m\xf3dszertanok"},"Agilis szoftverfejleszt\xe9si m\xf3dszertanok"),(0,s.kt)("h3",{id:"az-agilis-szoftverfejleszt\xe9s-alapjai"},"Az agilis szoftverfejleszt\xe9s alapjai"),(0,s.kt)("p",null,"Az agilis szoftverfejleszt\xe9s val\xf3j\xe1ban iterat\xedv szoftverfejleszt\xe9si m\xf3dszerek egy csoportj\xe1ra utal, amelyet 2001-ben az Agile Manifesto nev\u0171 kiadv\xe1nyban \xf6nt\xf6ttek form\xe1ba. Az agilis fejleszt\xe9si m\xf3dszerek (nevezik adapt\xedvnak is) egyik fontos jellemz\u0151je, hogy a r\xe9sztvev\u0151k, amennyire lehets\xe9ges megpr\xf3b\xe1lnak alkalmazkodni a projekthez. Ez\xe9rt fontos p\xe9ld\xe1ul, hogy a fejleszt\u0151k folyamatosan tanuljanak."),(0,s.kt)("p",null,"Az agilis szoftverfejleszt\xe9s szerint \xe9rt\xe9kesebbek:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"az egy\xe9nek \xe9s interaktivit\xe1s szemben a folyamatokkal \xe9s az eszk\xf6z\xf6kkel,"),(0,s.kt)("li",{parentName:"ol"},"a m\u0171k\xf6d\u0151 szoftver szemben a terjedelmes dokument\xe1ci\xf3val,"),(0,s.kt)("li",{parentName:"ol"},"az egy\xfcttm\u0171k\xf6d\xe9s a megrendel\u0151vel szemben a szerz\u0151d\xe9ses t\xe1rgyal\xe1sokkal,"),(0,s.kt)("li",{parentName:"ol"},"az alkalmazkod\xe1s a v\xe1ltoz\xe1sokhoz szemben a terv k\xf6vet\xe9s\xe9vel.")),(0,s.kt)("p",null,"Az agilis szoftverfejleszt\xe9s alapelvei:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"A legfontosabb a megrendel\u0151 kiel\xe9g\xedt\xe9se haszn\xe1lhat\xf3 szoftver gyors \xe9s folyamatos \xe1tad\xe1s\xe1val."),(0,s.kt)("li",{parentName:"ol"},"M\xe9g a k\xf6vetelm\xe9nyek k\xe9sei v\xe1ltoztat\xe1sa sem okoz probl\xe9m\xe1t."),(0,s.kt)("li",{parentName:"ol"},"A m\u0171k\xf6d\u0151 szoftver / protot\xedpus \xe1tad\xe1sa rendszeresen, a lehet\u0151 legr\xf6videbb id\u0151n bel\xfcl."),(0,s.kt)("li",{parentName:"ol"},"Napi egy\xfcttm\u0171k\xf6d\xe9s a megrendel\u0151 \xe9s a fejleszt\u0151k k\xf6z\xf6tt."),(0,s.kt)("li",{parentName:"ol"},"A projektek motiv\xe1lt egy\xe9nek k\xf6r\xe9 \xe9p\xfclnek, akik megkapj\xe1k a sz\xfcks\xe9ges eszk\xf6z\xf6ket \xe9s t\xe1mogat\xe1st a legjobb munkav\xe9gz\xe9shez."),(0,s.kt)("li",{parentName:"ol"},"A leghat\xe9konyabb kommunik\xe1ci\xf3 a szemt\u0151l-szembeni megbesz\xe9l\xe9s."),(0,s.kt)("li",{parentName:"ol"},"Az el\u0151rehalad\xe1s alapja a m\u0171k\xf6d\u0151 szoftver."),(0,s.kt)("li",{parentName:"ol"},"Az agilis folyamatok \xe1ltali fenntarthat\xf3 fejleszt\xe9s \xe1lland\xf3 \xfctemben."),(0,s.kt)("li",{parentName:"ol"},"Folyamatos figyelem a technikai kit\u0171n\u0151s\xe9gnek."),(0,s.kt)("li",{parentName:"ol"},"Egyszer\u0171s\xe9g, a min\xe9l nagyobb hat\xe9konys\xe1g\xe9rt."),(0,s.kt)("li",{parentName:"ol"},"\xd6nszervez\u0151 csapatok k\xe9sz\xedtik a legjobb terveket."),(0,s.kt)("li",{parentName:"ol"},"Rendszeres id\u0151k\xf6z\xf6nk\xe9nt a csapatok reag\xe1lnak a v\xe1ltoz\xe1sokra, hogy m\xe9g hat\xe9konyabbak legyenek.")),(0,s.kt)("p",null,"Az agilis szoftverfejleszt\xe9snek nagyon sok fajt\xe1ja van. Egy p\xe9lda erre a Scrum."),(0,s.kt)("p",null,"Ennek n\xe9h\xe1ny jellemz\u0151i:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Kevesebb dokument\xe1ci\xf3."),(0,s.kt)("li",{parentName:"ol"},"N\xf6vekv\u0151 rugalmass\xe1g, cs\xf6kken\u0151 kock\xe1zat."),(0,s.kt)("li",{parentName:"ol"},"K\xf6nnyebb kommunik\xe1ci\xf3, javul\xf3 egy\xfcttm\u0171k\xf6d\xe9s."),(0,s.kt)("li",{parentName:"ol"},"A megrendel\u0151 bevon\xe1sa a fejleszt\xe9sbe.")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Kevesebb dokument\xe1ci\xf3"),": Az agilis met\xf3dusok alapvet\u0151 k\xfcl\xf6nbs\xe9ge a hagyom\xe1nyosakhoz k\xe9pest, hogy a projektet apr\xf3 r\xe9szekre bontj\xe1k, \xe9s mindig egy kisebb darabot tesznek hozz\xe1 a term\xe9khez, ezeket egyt\u0151l n\xe9gy h\xe9tig terjed\u0151 ciklusokban (m\xe1s n\xe9ven keretekben vagy id\u0151dobozokban) k\xe9sz\xedtik el, \xe9s ezek a ciklusok ism\xe9tl\u0151dnek. Ez\xe1ltal nincs olyan jelleg\u0171 r\xe9szletes hossz\xfa t\xe1v\xfa tervez\xe9s, mint p\xe9ld\xe1ul a v\xedzes\xe9ses modelln\xe9l, csak az a minim\xe1lis, amire az adott ciklusban sz\xfcks\xe9g van. Ez abb\xf3l az elvb\u0151l indul ki, hogy nem lehet el\u0151re t\xf6k\xe9letesen, minden r\xe9szletre kiterjed\u0151en megtervezni egy szoftvert, mert vagy a tervben lesz hiba, vagy a megrendel\u0151 v\xe1ltoztat valamit."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"N\xf6vekv\u0151 rugalmass\xe1g, cs\xf6kken\u0151 kock\xe1zat"),": Az agilis m\xf3dszerek a v\xe1ltoz\xe1sokhoz adapt\xe1lhat\xf3 technik\xe1kat helyezik el\u0151nybe a j\xf3l tervezhet\u0151 technik\xe1kkal szemben. Ennek megfelel\u0151en iter\xe1ci\xf3kat haszn\xe1lnak. Egy iter\xe1ci\xf3 olyan, mint egy hagyom\xe1nyos \xe9letciklus: tartalmazza a tervez\xe9st, a k\xf6vetelm\xe9nyek elemz\xe9s\xe9t, a k\xf3dol\xe1st, \xe9s a tesztel\xe9st. Egy iter\xe1ci\xf3 maximum egy h\xf3nap terjedelm\u0171, \xedgy n\u0151 a rugalmass\xe1g, valamint cs\xf6kken a kock\xe1zat, hiszen az iter\xe1ci\xf3 v\xe9g\xe9n \xe1tv\xe9teli teszt van, ami ut\xe1n megrendel\u0151 megv\xe1ltoztathatja eddigi k\xf6vetelm\xe9nyeit. Minden iter\xe1ci\xf3 v\xe9g\xe9n fut\xf3k\xe9pes v\xe1ltozatot kell kiadniuk a csapatoknak a kez\xfckb\u0151l."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"K\xf6nnyebb kommunik\xe1ci\xf3, javul\xf3 egy\xfcttm\u0171k\xf6d\xe9s"),": Jellemz\u0151, hogy a fejleszt\u0151 csoportok \xf6nszervez\u0151ek, \xe9s \xe1ltal\xe1ban nem egy feladatra specializ\xe1l\xf3dottak a tagok, hanem t\xf6bbf\xe9le szakter\xfcletr\u0151l ker\xfclnek egy csapatba, \xedgy p\xe9ld\xe1ul programozok \xe9s tesztel\u0151k. Ezek a csapatok ide\xe1lis esetben egy helyen, egy irod\xe1ban dolgoznak, a csapatok m\xe9rete ide\xe1lis esetben 5-9 f\u0151. Mindez leegyszer\u0171s\xedti a tagok k\xf6z\xf6tti kommunik\xe1ci\xf3t \xe9s seg\xedti a csapaton bel\xfcli egy\xfcttm\u0171k\xf6d\xe9st. Az agilis m\xf3dszerek el\u0151nyben r\xe9szes\xedtik a szemt\u0151l szembe folytatott kommunik\xe1ci\xf3t az \xedr\xe1sban folytatott eszmecser\xe9vel szemben."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"A megrendel\u0151 bevon\xe1sa a fejleszt\xe9sbe"),": Vagy szem\xe9lyesen a megrendel\u0151 vagy egy kijel\xf6lt szem\xe9ly, aki elk\xf6telezi mag\xe1t a term\xe9k elk\xe9sz\xedt\xe9se mellett, folyamatosan a fejleszt\u0151k rendelkez\xe9s\xe9re \xe1ll, hogy a menet k\xf6zben felmer\xfcl\u0151 k\xe9rd\xe9seket min\xe9l hamarabb meg tudja v\xe1laszolni. Ez a szem\xe9ly a ciklus v\xe9g\xe9n is r\xe9szt vesz az elk\xe9sz\xfclt protot\xedpus ki\xe9rt\xe9kel\xe9s\xe9ben. Fontos feladata az elk\xe9sz\xedtend\u0151 funkci\xf3k fontoss\xe1gi sorrendj\xe9nek fel\xe1ll\xedt\xe1sa azok \xfczleti \xe9rt\xe9ke alapj\xe1n. Az \xfczleti \xe9rt\xe9kb\u0151l \xe9s a fejleszt\u0151 csapat \xe1ltal becs\xfclt fejleszt\xe9si id\u0151b\u0151l sz\xe1molhat\xf3 a befektet\xe9s megt\xe9r\xfcl\xe9se (Return of Investment, ROI). A befektet\xe9s megt\xe9r\xfcl\xe9se az \xfczleti \xe9rt\xe9k \xe9s a fejleszt\xe9si id\u0151 h\xe1nyadosa."),(0,s.kt)("p",null,"Az agilis m\xf3dszertanok nagyon j\xf3l m\u0171k\xf6dnek, am\xedg a feladatot egy k\xf6zepes m\xe9ret\u0171 (5-9 f\u0151s) csapat k\xe9pes megoldani. Nagyobb csoportok eset\xe9n neh\xe9z a csapat szellem kialak\xedt\xe1sa. Ha t\xf6bb csoport dolgozik ugyanazon a c\xe9lon, akkor k\xf6zt\xfck a kommunik\xe1ci\xf3 neh\xe9zkes. Ha megrendel\u0151 nem hajland\xf3 egy elk\xf6telezett munkat\xe1rs\xe1t a fejleszt\u0151 csapat rendelkez\xe9s\xe9re bocs\xe1tani, akkor az kiv\xe1lthat\xf3 egy \xfczleti elemz\u0151vel, aki \xe1tl\xe1tja a megrendel\u0151 \xfczleti folyamatait, de ez kock\xe1zatos."),(0,s.kt)("h3",{id:"az-agilis-ki\xe1ltv\xe1ny"},"Az agilis ki\xe1ltv\xe1ny"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"Mi a k\xf6vetkez\u0151 elveket k\xf6vetj\xfck:")),(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"Legfontosabbnak azt tartjuk, hogy az \xfcgyf\xe9l el\xe9gedetts\xe9g\xe9t a m\u0171k\xf6d\u0151 szoftver miel\u0151bbi \xe9s folyamatos sz\xe1ll\xedt\xe1s\xe1val v\xedvjuk ki.")),(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"Elfogadjuk, hogy a k\xf6vetelm\xe9nyek v\xe1ltozhatnak ak\xe1r a fejleszt\xe9s v\xe9ge fel\xe9 is. Az agilis elj\xe1r\xe1sok a v\xe1ltoz\xe1sb\xf3l versenyel\u0151nyt kov\xe1csolnak az \xfcgyf\xe9l sz\xe1m\xe1ra.")),(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"Sz\xe1ll\xedts m\u0171k\xf6d\u0151 szoftvert gyakran, azaz n\xe9h\xe1ny hetenk\xe9nt vagy havonk\xe9nt, lehet\u0151s\xe9g szerint a gyakoribb sz\xe1ll\xedt\xe1st v\xe1lasztva.")),(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"Az \xfczleti szak\xe9rt\u0151k \xe9s a szoftverfejleszt\u0151k dolgozzanak egy\xfctt minden nap, a projekt teljes id\u0151tartam\xe1ban.")),(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"\xc9p\xedtsd a projektet sikerorient\xe1lt egy\xe9nekre. Biztos\xedtsd sz\xe1mukra a sz\xfcks\xe9ges k\xf6rnyezetet \xe9s t\xe1mogat\xe1st, \xe9s b\xedzz meg benn\xfck, hogy elv\xe9gzik a munk\xe1t.")),(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"A leghat\xe1sosabb \xe9s leghat\xe9konyabb m\xf3dszer az inform\xe1ci\xf3 \xe1tad\xe1s\xe1nak a fejleszt\xe9si csapaton bel\xfcl, a szem\xe9lyes besz\xe9lget\xe9s.")),(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"A m\u0171k\xf6d\u0151 szoftver az els\u0151dleges m\xe9rc\xe9je az el\u0151rehalad\xe1snak.")),(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"Az agilis elj\xe1r\xe1sok a fenntarthat\xf3 fejleszt\xe9st p\xe1rtolj\xe1k. Fontos, hogy a szponzorok, a fejleszt\u0151k \xe9s a felhaszn\xe1l\xf3k folytonosan k\xe9pesek legyenek tartani egy \xe1lland\xf3 \xfctemet.")),(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"A m\u0171szaki kiv\xe1l\xf3s\xe1g \xe9s a j\xf3 terv folyamatos szem el\u0151tt tart\xe1sa fokozza az agilit\xe1st.")),(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"Elengedhetetlen az egyszer\u0171s\xe9g, azaz az elv\xe9gezetlen munkamennyis\xe9g maximaliz\xe1l\xe1s\xe1nak m\u0171v\xe9szete.")),(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"A legjobb architekt\xfar\xe1k, k\xf6vetelm\xe9nyek \xe9s rendszertervek az \xf6nszervez\u0151d\u0151 csapatokt\xf3l sz\xe1rmaznak.")),(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("em",{parentName:"p"},"A csapat rendszeresen m\xe9rlegeli, hogy mik\xe9ppen lehet emelni a hat\xe9konys\xe1got, \xe9s ehhez hangolja \xe9s igaz\xedtja az m\u0171k\xf6d\xe9s\xe9t."))),(0,s.kt)("h3",{id:"scrum"},"Scrum"),(0,s.kt)("p",null,"A Scrum egy agilis szoftverfejleszt\xe9si met\xf3dus. Jellegzetess\xe9ge, hogy fogalmait az amerikai futballb\xf3l, m\xe1s n\xe9ven rugby, mer\xedti. Ilyen fogalom, maga a Scrum is, amely dulakod\xe1st jelent. A m\xf3dszertan jelent\u0151s szerepet tulajdon\xedt a csoporton bel\xfcli \xf6sszetart\xe1snak. A csoporton bel\xfcl sok a tal\xe1lkoz\xf3, a kommunik\xe1ci\xf3, lehet\u0151s\xe9g van a gondok megbesz\xe9l\xe9sre is. Az aj\xe1nl\xe1s szerint j\xf3, ha a csapat egy helyen dolgozik \xe9s sz\xf3ban kommunik\xe1l."),(0,s.kt)("p",null,"A Scrum \xe1ltal el\u0151\xedrt fejleszt\xe9si folyamat r\xf6viden \xedgy foglalhat\xf3 \xf6ssze: A Product Owner l\xe9trehoz egy Product Backlog-ot, amelyre a teend\u0151ket felhaszn\xe1l\xf3i sztorik\xe9nt veszi fel. A sztorikat priorit\xe1ssal kell ell\xe1tni \xe9s megmondani, mi az \xfczleti \xe9rt\xe9k\xfck. Ez a Product Owner feladata. A Sprint Planning Meetingen a csapat tagjai megbesz\xe9lik, hogy mely sztorik megval\xf3s\xedt\xe1s\xe1t v\xe1llalj\xe1k el, lehet\u0151leg a legnagyobb priorit\xe1s\xfaakat. Ehhez a sztorikat kisebb feladatokra bontj\xe1k, hogy megbecs\xfclhess\xe9k mennyi ideig tart megval\xf3s\xedtani azokat. Ezut\xe1n j\xf6n a sprint, ami 2-4 h\xe9tig tart. A sprint id\u0151tartam\xe1t az elej\xe9n fix\xe1lja a csapat, ett\u0151l elt\xe9rni nem lehet. Ha nem siker\xfcl befejezni az adott id\u0151tartam alatt, akkor sikertelen a sprint, ami b\xfcntet\xe9st, \xe1ltal\xe1ban pr\xe9mium megvon\xe1st, von maga ut\xe1n. A sprinten bel\xfcl a csapat \xe9s a Scrum Master naponta megbesz\xe9lik a t\xf6rt\xe9nteket a Daily Meetingen. Itt mindenki elmondja, hogy mit csin\xe1lt, mi lesz a k\xf6vetkez\u0151 feladata, \xe9s milyen akad\xe1lyokba (impediment) \xfctk\xf6z\xf6tt. A sprint v\xe9g\xe9n k\xf6vetkezik a Sprint Review, ahol a csapat bemutatja a sprint alatt elk\xe9sz\xfclt sztorikat. Ezeket vagy elfogadj\xe1k, vagy nem. Majd a Sprint Retrospective tal\xe1lkoz\xf3 k\xf6vetkezik, ahol a Sprint sor\xe1n felmer\xfclt probl\xe9m\xe1kat t\xe1rgyalja \xe1t a csapat. A megold\xe1sra konkr\xe9t javaslatokat kell tenni. Ezek ut\xe1n \xfajra a Sprint Planning Meeting k\xf6vetkezik. A fejlesztett term\xe9k az el\u0151tt piacra ker\xfclhet, hogy minden sztorit megval\xf3s\xedtottak volna."),(0,s.kt)("p",null,"A csapatban minden szerepk\xf6r k\xe9pvisel\u0151je megtal\xe1lhat\xf3, \xedgy van benne fejleszt\u0151 \xe9s tesztel\u0151 is. T\xe9ves azt gondolni, hogy a sprint elej\xe9n a tesztel\u0151 is programot \xedr, hiszen, am\xedg nincs program, nincs mit tesztelni. Ezzel szemben a tesztel\u0151 a sprint elej\xe9n a tesztel\u0151 a teszttervet k\xe9sz\xedt, majd kidolgozza a teszteseteket, v\xe9g\xfcl, amikor m\xe1r vannak k\xe9sz oszt\xe1lyok, unit-teszteket \xedr, a v\xe1ltoz\xe1sokat regresszi\xf3s teszttel ellen\u0151rzi."),(0,s.kt)("p",null,"A Scrum, mint minden agilis m\xf3dszertan, arra \xe9p\xedt, hogy a fejleszt\xe9s k\xf6zben a megrendel\u0151 ig\xe9nyei v\xe1ltozhatnak. A v\xe1ltoz\xe1sokhoz \xfagy alkalmazkodik, a Product Backlog folyamatosan v\xe1ltozhat. Az erre \xe9p\xfcl\u0151 dokumentumok folyamatosan finomodnak, teh\xe1t k\xf6nnyen v\xe1ltoztathat\xf3k. A csapatok gyorsan megval\xf3s\xedtj\xe1k a sz\xfcks\xe9ges v\xe1ltoz\xe1sokat."),(0,s.kt)("p",null,"A Scrum t\xf6k\xe9lyre viszi az egy csapaton bel\xfcli hat\xe9konys\xe1got. Ha t\xf6bb csapat is dolgozik egy fejleszt\xe9sen, akkor k\xf6zt\xfck lehetnek kommunik\xe1ci\xf3s zavarok, ami a m\xf3dszertan egyik h\xe1tr\xe1nya."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Gyors",src:a(2906).Z,width:"2640",height:"852"})),(0,s.kt)("p",null,"A Scrum k\xe9t nagyon fontos fogalma a sprint \xe9s az akad\xe1ly."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Sprint")," (vagy futam): Egy el\u0151re megbesz\xe9lt hossz\xfas\xe1g\xfa fejleszt\xe9si id\u0151szak, \xe1ltal\xe1ban 2-4 h\xe9tig tart, kezd\u0151dik a Sprint Planning-gel, majd a Retrospective-vel z\xe1rul. Ez a Scrum \xfagynevezett iter\xe1ci\xf3s ciklusa, addig kell ism\xe9telni, am\xedg a Product Backlog-r\xf3l el nem t\u0171nnek a megold\xe1sra v\xe1r\xf3 felhaszn\xe1l\xf3i sztorik. Alapelv, hogy minden sprint v\xe9g\xe9re egy potenci\xe1lisan lesz\xe1ll\xedthat\xf3 szoftvert kell el\u0151\xe1ll\xedtani a csapatnak, azaz egy protot\xedpust. A sprint tekinthet\u0151 k\xe9t m\xe9rf\xf6ldk\u0151 k\xf6zti munk\xe1nak."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Akad\xe1ly")," (Impediment): Olyan g\xe1tl\xf3 t\xe9nyez\u0151, amely a munk\xe1t h\xe1tr\xe1ltatja. Csak \xe9s kiz\xe1r\xf3lag munkahelyi probl\xe9ma tekinthet\u0151 akad\xe1lynak. A csapattagok mag\xe1n\xe9leti probl\xe9m\xe1i nem azok. Akad\xe1ly p\xe9ld\xe1ul, hogy lej\xe1rt az egyik szoftver licence, vagy sz\xfcks\xe9g lenne egy plusz g\xe9pre a gyorsabb halad\xe1shoz, vagy t\xf6bb mem\xf3ri\xe1ra az egyik g\xe9pbe, vagy ak\xe1r az is lehet, hogy 2 tag megs\xe9rt\u0151d\xf6tt egym\xe1sra. Ilyenkor kell a Scrum Masternek elh\xe1r\xedtani az akad\xe1lyokat, hogy a munka min\xe9l g\xf6rd\xfcl\xe9kenyebb legyen."),(0,s.kt)("p",null,"A m\xf3dszertan szerepk\xf6r\xf6ket, megbesz\xe9l\xe9seket \xe9s elk\xe9sz\xedtend\u0151 term\xe9keket \xedr el\u0151."),(0,s.kt)("h4",{id:"szerepk\xf6r\xf6k"},"Szerepk\xf6r\xf6k"),(0,s.kt)("p",null,"A m\xf3dszertan k\xe9tf\xe9le szerepk\xf6rt k\xfcl\xf6nb\xf6ztet meg, ezek a diszn\xf3k \xe9s a csirk\xe9k. A megk\xfcl\xf6nb\xf6ztet\xe9s alapja egy vicc:"),(0,s.kt)("p",null,"A diszn\xf3 \xe9s a csirke mennek az utc\xe1n. Egyszer csak a csirke megsz\xf3lal: \u201eTe, nyissunk egy \xe9ttermet!\u201d Mire a diszn\xf3: \u201eJ\xf3 \xf6tlet, mi legyen a neve?\u201d A csirke gondolkozik, majd r\xe1v\xe1gja: \u201eNevezz\xfck Sonk\xe1stoj\xe1snak!\u201d A diszn\xf3 erre: \u201eNem tetszik valahogy, mert \xe9n biztosan mindent beleadn\xe9k, te meg \xe9ppen csak hogy r\xe9szt venn\xe9l benne.\u201d"),(0,s.kt)("p",null,"A diszn\xf3k azok, akik elk\xf6telezettek a szoftver projekt siker\xe9ben. \u0150k azok, akik a \u201ev\xe9r\xfcket\u201d adj\xe1k a projekt siker\xe9\xe9rt, azaz felel\u0151ss\xe9get v\xe1llalnak \xe9rte. A csirk\xe9k is \xe9rdekeltek a projekt siker\xe9ben, \u0151k a haszon\xe9lvez\u0151i a sikernek, de ha esetleg m\xe9gse sikeres a projekt, akkor az nem az \u0151 felel\u0151ss\xe9g\xfck."),(0,s.kt)("p",null,"Diszn\xf3k:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Scrum mester (Scrum Master)"),(0,s.kt)("li",{parentName:"ol"},"Term\xe9ktulajdonos (Product Owner)"),(0,s.kt)("li",{parentName:"ol"},"Csapat (Team)")),(0,s.kt)("p",null,"Csirk\xe9k:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"\xdczleti szerepl\u0151k (Stakeholders)"),(0,s.kt)("li",{parentName:"ol"},"Menedzsment (Managers)")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Scrum mester")," (Scrum Master): A Scrum mester fel\xfcgyeli \xe9s megk\xf6nny\xedti a folyamat fenntart\xe1s\xe1t, seg\xedti a csapatot, ha probl\xe9m\xe1ba \xfctk\xf6zik, illetve fel\xfcgyeli, hogy mindenki betartja-e a Scrum alapvet\u0151 szab\xe1lyait. Ilyen p\xe9ld\xe1ul, hogy a Sprint id\u0151tartama nem t\xe9rhet el az el\u0151re megbesz\xe9ltt\u0151l, m\xe9g akkor sem, ha az elv\xe1llalt munka nem lesz k\xe9sz. Akkor is nemet kell mondania, ha a Product Owner a sprint k\xf6zben azt tal\xe1lja ki, hogy az egyik sztorit, amit nem v\xe1llaltak be az adott id\u0151szakra, el kellene k\xe9sz\xedteni, mert mondjuk megv\xe1ltoztak az \xfczleti k\xf6r\xfclm\xe9nyek. L\xe9nyeg\xe9ben \u0151 a projekt menedzser."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Term\xe9k tulajdonos")," (Product Owner): A megrendel\u0151 szerep\xe9t t\xf6lti be, \u0151 a felel\u0151s az\xe9rt, hogy a csapat mindig azt a r\xe9sz\xe9t fejlessze a term\xe9knek, amely \xe9ppen a legfontosabb, vagyis a felhaszn\xe1l\xf3i sztorik fontoss\xe1gi sorrendbe \xe1ll\xedt\xe1sa a feladata a Product Backlog-ban. A Product Owner \xe9s a Scrum Master nem lehet ugyanaz a szem\xe9ly."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Csapat")," (Team): \u0150k a felel\u0151sek az\xe9rt, hogy az aktu\xe1lis sprintre bev\xe1llalt feladatokat elv\xe9gezz\xe9k, ide\xe1lis esetben 5-9 f\u0151 alkot egy csapatot. A csapatban helyet kapnak a fejleszt\u0151k, tesztel\u0151k, elemz\u0151k. \xcdgy nem a v\xe1lt\xf3fut\xe1sra jellemz\u0151 staf\xe9tav\xe1lt\xe1s (mint a v\xedzes\xe9s modelln\xe9l), hanem a futballra eml\xe9keztet\u0151 passzolgat\xe1s, azaz igazi csapatj\xe1t\xe9k jellemzi a csapatot."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"\xdczleti szerepl\u0151k"),", pl.: megrendel\u0151k, forgalmaz\xf3k (Stakeholders, i.e., customers, vendors): A megrendel\u0151 \xe1ltal j\xf6n l\xe9tre a projekt, \u0151 az, aki majd a haszn\xe1t l\xe1tja a term\xe9k elk\xe9sz\xedt\xe9s\xe9nek, a Sprint Review sor\xe1n kap szerepet a folyamatban."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Menedzsment")," (Managers): A menedzsment feladata a megfelel\u0151 k\xf6rnyezet fel\xe1ll\xedt\xe1sa a csapatok sz\xe1m\xe1ra. \xc1ltal\xe1ban a megfelel\u0151 k\xf6rnyezeten t\xfal a lehet\u0151 legjobb k\xf6rnyezet fel\xe1ll\xedt\xe1s\xe1ra t\xf6rekszenek."),(0,s.kt)("h4",{id:"megbesz\xe9l\xe9sek"},"Megbesz\xe9l\xe9sek"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Sprint Planning Meeting")," (futamtervez\u0151 megbesz\xe9l\xe9s): Ezen a tal\xe1lkoz\xf3n kell megbesz\xe9lni, hogy ki mennyi munk\xe1t tud elv\xe1llalni, majd ennek tudat\xe1ban d\xf6nti el a csapat, hogy mely sztorikat v\xe1llalja be a k\xf6vetkez\u0151 sprintre. Emellett a m\xe1sik l\xe9nyeges dolog, hogy a csapat a Product Owner-rel megbesz\xe9li, majd teljes m\xe9rt\xe9kben meg\xe9rti, hogy a vev\u0151 mit szeretne az adott sztorit\xf3l, \xedgy elker\xfclhet\u0151ek az esetleges f\xe9lre\xe9rt\xe9sekb\u0151l ad\xf3d\xf3 probl\xe9m\xe1k. Ha volt Backlog Grooming, akkor nem tart olyan sok\xe1ig a Planning, ugyanis a csapat ismeri a Backlog-ot, azon nem sz\xfcks\xe9ges finom\xedtani, hacsak a megrendel\u0151t\u0151l nem \xe9rkezik ilyen ig\xe9ny. A harmadik dolog, amit meg kell vizsg\xe1lni, hogy a csapat hogyan teljes\xedtett az el\u0151z\u0151 sprintben, vagyis t\xfalv\xe1llalta-e mag\xe1t vagy sem. Ha t\xfal sok sztorit v\xe1llaltak el, akkor le kell vonni a k\xf6vetkeztet\xe9st, \xe9s a k\xf6vetkez\u0151 sprintre kevesebbet v\xe1llalni. Ez a probl\xe9ma legink\xe1bb az \xfaj, kev\xe9ss\xe9 \xf6sszeszokott csapatokra jellemz\u0151, ahol m\xe9g nem tudni, hogy mennyi munk\xe1t b\xedr elv\xe9gezni a csapat. Ellenkez\u0151 esetben, ha alulv\xe1llalta mag\xe1t egy csapat, akkor \xe9rtelemszer\u0171en t\xf6bbet v\xe1llaljon, illetve, ha ide\xe1lis volt az el\u0151z\u0151 sprint, akkor hasonl\xf3 mennyis\xe9g a javasolt."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Backlog Grooming/Backlog Refinement"),": A Product Backlog finom\xedt\xe1sa a Teammel egy\xfctt, el\u0151fordulhat p\xe9ld\xe1ul, hogy egy taszk t\xfal nagy, \xedgy story lesz bel\u0151le, \xe9s ut\xe1na taszkokra bontva lesz feldolgozva. Ha elmarad, akkor a Sprint Planning hossz\xfara ny\xfalhat, valamint abban is nagy seg\xedts\xe9g, hogy a csapat t\xf6k\xe9letesen meg\xe9rtse, hogy mit szeretne a megrendel\u0151."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Daily Meeting/Daily Scrum"),": A sprint ideje alatt minden nap kell tartani egy r\xf6vid megbesz\xe9l\xe9st, ami maximum 15 perc, \xe9s egy el\u0151re megbesz\xe9lt id\u0151pontban, a csapattagok \xe9s a Scrum Master jelenl\xe9t\xe9ben t\xf6rt\xe9nik (m\xe1sok is ott lehetnek, de nem sz\xf3lhatnak bele). \xc9rdekess\xe9g, hogy nem szabad le\xfclni, mindenki \xe1ll, ezzel is jelezve, hogy ez egy r\xf6vid tal\xe1lkoz\xf3. H\xe1rom k\xe9rd\xe9sre kell v\xe1laszolnia a csapat tagjainak, ezek a k\xf6vetkez\u0151ek:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Mit csin\xe1lt\xe1l a tegnapi megbesz\xe9l\xe9s \xf3ta?"),(0,s.kt)("li",{parentName:"ol"},"Mit fogsz csin\xe1lni a k\xf6vetkez\u0151 megbesz\xe9l\xe9sig?"),(0,s.kt)("li",{parentName:"ol"},"Milyen akad\xe1lyokba \xfctk\xf6zt\xe9l az adott feladat megold\xe1sa sor\xe1n?")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Sprint Review Meeting")," (Futam \xe1ttekint\xe9s): Minden sprint v\xe9g\xe9n \xf6ssze\xfclnek a szerepl\u0151k, \xe9s megn\xe9zik, hogy melyek azok a sztorik, amelyeket siker\xfclt elk\xe9sz\xedteni, illetve az megfelel-e a k\xf6vetelm\xe9nyeknek. Ekkor a sztori \xe1llapot\xe1t k\xe9szre \xe1ll\xedtj\xe1k. Fontos, hogy egy sztori csak akkor ker\xfclhet ebbe az \xe1llapotba, ha minden taszkja elk\xe9sz\xfclt, \xe9s a Review-on elfogadt\xe1k. Ezen a megrendel\u0151 is jelen van."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Sprint Retrospective")," (Visszatekint\xe9s): Ez az egyik legfontosabb meeting. A Scrum egyik legfontosabb funkci\xf3ja, hogy felsz\xednre hozza azokat a probl\xe9m\xe1kat, amelyek h\xe1tr\xe1ltatj\xe1k a fejleszt\u0151ket a feladatmegold\xe1sban, \xedgy ha ezeket az akad\xe1lyokat megoldjuk, a csapat jobban tud majd alkalmazkodni a k\xf6vetkez\u0151 sprint alatt a feladathoz. Probl\xe9m\xe1k a Daily Meetingen is el\u0151ker\xfclnek, de ott ink\xe1bb a szem\xe9lyeket \xe9rint\u0151 k\xe9rd\xe9sek vannak napirenden, m\xedg itt a csapatmunka tov\xe1bbfejleszt\xe9se az els\u0151dleges."),(0,s.kt)("h4",{id:"term\xe9kek"},"Term\xe9kek"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Product Backlog")," (term\xe9k teend\u0151 lista): Ez az a dokumentum, ahol a Product Owner elhelyezi azokat az elemeket, m\xe1s n\xe9ven sztorikat, amelyeket el kell k\xe9sz\xedteni. Ez egyfajta k\xedv\xe1ns\xe1glista. A Product Owner minden sztorihoz priorit\xe1st, fontoss\xe1gi sorrendet rendel, \xedgy tudja szab\xe1lyozni, hogy melyeket kell els\u0151sorban elk\xe9sz\xedteni, \xedgy a Sprint Planning sor\xe1n a csapattagok l\xe1thatj\xe1k, hogy ami a Backlog-ban legfel\xfcl van, azt szeretn\xe9 a vev\u0151 leghamarabb k\xe9szen l\xe1tni, annak van a legnagyobb \xfczleti \xe9rt\xe9ke. Emellett a csapatok s\xfalyozz\xe1k az elemeket aszerint, hogy melynek az elk\xe9sz\xedt\xe9s\xe9hez kell a kevesebb munka, \xedgy azonos priorit\xe1s mellett a kevesebb munk\xe1t ig\xe9nyl\u0151 elemnek nagyobb a befektet\xe9s megt\xe9r\xfcl\xe9se (Return of Investment, ROI). Az \xfczleti \xe9rt\xe9k meghat\xe1roz\xe1sa a Product Owner, a munka megbecsl\xe9se a csapat feladata. A kett\u0151 h\xe1nyadosa a ROI."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Sprint Backlog")," (futam teend\u0151 lista): Ebben a dokumentumban az aktu\xe1lis sprintre bev\xe1llalt munk\xe1k, storyk vannak felsorolva, ezeket kell adott id\u0151n bel\xfcl a csapatnak megval\xf3s\xedtania. A sztorik tov\xe1bb vannak bontva taszkokra, \xe9s ezeket a taszkokat v\xe1llalj\xe1k el a tagok a Daily Meeting sor\xe1n. Ez a feldarabol\xe1sa a feladatoknak a feladat min\xe9l jobb meg\xe9rt\xe9s\xe9t seg\xedti."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Burn down chart")," (Napi Eredm\xe9ny Kimutat\xe1s): Ez egy diagram, amely seg\xedt megmutatni, hogy az ide\xe1lis munkatemp\xf3hoz k\xe9pest hogyan halad a csapat az aktu\xe1lis sprinten bel\xfcl. K\xf6nnyen leolvashat\xf3 r\xf3la, hogy a csapat \xe9ppen elakadt-e egy ponton, ak\xe1r arra is lehet k\xf6vetkeztetni, hogy ilyen iramban k\xe9sz lesz-e minden a sprint v\xe9g\xe9re. Vagy \xe9ppen ellenkez\u0151leg, siker\xfclt felgyors\xedtani az iramot, \xe9s id\u0151ben, vagy ak\xe1r kicsit hamarabb is k\xe9sz lehet a bev\xe1llalt munka."),(0,s.kt)("h2",{id:"tov\xe1bbi-inform\xe1ci\xf3k"},"Tov\xe1bbi inform\xe1ci\xf3k"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://gyires.inf.unideb.hu/KMITT/c12/ch02s03.html"},"https://gyires.inf.unideb.hu/KMITT/c12/ch02s03.html")),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://gyires.inf.unideb.hu/KMITT/c02/ch02.html"},"https://gyires.inf.unideb.hu/KMITT/c02/ch02.html")),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://users.iit.uni-miskolc.hu/~tompa/Szoftverteszt/2_Modellek.pdf"},"https://users.iit.uni-miskolc.hu/~tompa/Szoftverteszt/2_Modellek.pdf")),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://cloud.smartdraw.com/editor.aspx"},"https://cloud.smartdraw.com/editor.aspx")))}m.isMDXComponent=!0},8376:(e,t,a)=>{a.d(t,{Z:()=>l});const l=a.p+"assets/images/6-Spiral_model-258b5055e2ff23d6f44b65a1b48c81e9.png"},9013:(e,t,a)=>{a.d(t,{Z:()=>l});const l=a.p+"assets/images/6-V-5de9a3057d3754101bb113d3a8f0a2f9.png"},3187:(e,t,a)=>{a.d(t,{Z:()=>l});const l=a.p+"assets/images/6-gyors-3d46b31378780a5a09035ebb9694134a.png"},9344:(e,t,a)=>{a.d(t,{Z:()=>l});const l=a.p+"assets/images/6-inkremental-2-41ef1c91fcc1496753b8a875a4f2bdd2.png"},9976:(e,t,a)=>{a.d(t,{Z:()=>l});const l=a.p+"assets/images/6-inkremental-f54ac004b6ab7c68d9dfab3751b5fb85.png"},7518:(e,t,a)=>{a.d(t,{Z:()=>l});const l=a.p+"assets/images/6-prototipus-ef6a8974155208acb3f561720cb12077.png"},2906:(e,t,a)=>{a.d(t,{Z:()=>l});const l=a.p+"assets/images/6-scrum-718bb5ceb1d1d72e7e5ec9a31ed1abe1.png"},8943:(e,t,a)=>{a.d(t,{Z:()=>l});const l=a.p+"assets/images/6-vizeses-14b3ba81942c20acca123d9c14c3c586.png"}}]);