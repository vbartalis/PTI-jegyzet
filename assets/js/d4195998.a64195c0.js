"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[920],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var l=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},s=Object.keys(e);for(l=0;l<s.length;l++)a=s[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(l=0;l<s.length;l++)a=s[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=l.createContext({}),k=function(e){var t=l.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},m=function(e){var t=k(e.components);return l.createElement(o.Provider,{value:t},e.children)},u="mdxType",z={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},g=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=k(a),g=n,d=u["".concat(o,".").concat(g)]||u[g]||z[g]||s;return a?l.createElement(d,r(r({ref:t},m),{},{components:a})):l.createElement(d,r({ref:t},m))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,r=new Array(s);r[0]=g;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[u]="string"==typeof e?e:n,r[1]=i;for(var k=2;k<s;k++)r[k]=a[k];return l.createElement.apply(null,r)}return l.createElement.apply(null,a)}g.displayName="MDXCreateElement"},5850:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>k});var l=a(7462),n=(a(7294),a(3905));const s={sidebar_position:3,title:"3. T\xe9tel",description:"Objektumorient\xe1lt paradigma",keywords:["PTI",2023,"Z\xe1r\xf3vizsga","informatika","matematika","program tervez\u0151 informatikus","jegyzet"]},r="3M. T\xe9tel: Objektumorient\xe1lt paradigma",i={unversionedId:"informatika/variant-3/3",id:"informatika/variant-3/3",title:"3. T\xe9tel",description:"Objektumorient\xe1lt paradigma",source:"@site/docs/informatika/variant-3/3.md",sourceDirName:"informatika/variant-3",slug:"/informatika/variant-3/3",permalink:"/PTI-jegyzet/docs/informatika/variant-3/3",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"3. T\xe9tel",description:"Objektumorient\xe1lt paradigma",keywords:["PTI","2023","Z\xe1r\xf3vizsga","informatika","matematika","program tervez\u0151 informatikus","jegyzet"]},sidebar:"tutorialSidebar",previous:{title:"2. T\xe9tel",permalink:"/PTI-jegyzet/docs/informatika/variant-3/2"},next:{title:"4. T\xe9tel",permalink:"/PTI-jegyzet/docs/informatika/variant-3/4"}},o={},k=[{value:"Az objektumorient\xe1lt paradigma alapfogalmai.",id:"az-objektumorient\xe1lt-paradigma-alapfogalmai",level:2},{value:"Programoz\xe1si paradigma:",id:"programoz\xe1si-paradigma",level:3},{value:"Egys\xe9gbe z\xe1r\xe1s (Encapsulation):",id:"egys\xe9gbe-z\xe1r\xe1s-encapsulation",level:4},{value:"Absztrakci\xf3 (Abstraction):",id:"absztrakci\xf3-abstraction",level:4},{value:"\xd6r\xf6kl\u0151d\xe9s (Inheritance):",id:"\xf6r\xf6kl\u0151d\xe9s-inheritance",level:4},{value:"Polimorfizmus (t\xf6bbalak\xfas\xe1g):",id:"polimorfizmus-t\xf6bbalak\xfas\xe1g",level:4},{value:"Iter\xe1tor:",id:"iter\xe1tor",level:4},{value:"Algoritmus:",id:"algoritmus",level:4},{value:"Aggreg\xe1ci\xf3:",id:"aggreg\xe1ci\xf3",level:4},{value:"Kompoz\xedci\xf3:",id:"kompoz\xedci\xf3",level:4},{value:"Deleg\xe1l\xe1s:",id:"deleg\xe1l\xe1s",level:4},{value:"F\xfcgg\u0151s\xe9g:",id:"f\xfcgg\u0151s\xe9g",level:4},{value:"Oszt\xe1ly, objektum, p\xe9ld\xe1nyos\xedt\xe1s.",id:"oszt\xe1ly-objektum-p\xe9ld\xe1nyos\xedt\xe1s",level:2},{value:"Oszt\xe1ly:",id:"oszt\xe1ly",level:3},{value:"Objektum:",id:"objektum",level:3},{value:"P\xe9ld\xe1nyos\xedt\xe1s:",id:"p\xe9ld\xe1nyos\xedt\xe1s",level:3},{value:"\xd6r\xf6kl\u0151d\xe9s, oszt\xe1lyhierarchia.",id:"\xf6r\xf6kl\u0151d\xe9s-oszt\xe1lyhierarchia",level:2},{value:"Oszt\xe1lyhierarchia:",id:"oszt\xe1lyhierarchia",level:3},{value:"Polimorfizmus, met\xf3dust\xfalterhel\xe9s.",id:"polimorfizmus-met\xf3dust\xfalterhel\xe9s",level:2},{value:"Met\xf3dust\xfalterhel\xe9s:",id:"met\xf3dust\xfalterhel\xe9s",level:3},{value:"A bez\xe1r\xe1si eszk\xf6zrendszer.",id:"a-bez\xe1r\xe1si-eszk\xf6zrendszer",level:2},{value:"Absztrakt oszt\xe1lyok \xe9s interf\xe9szek.",id:"absztrakt-oszt\xe1lyok-\xe9s-interf\xe9szek",level:2},{value:"Absztrakt oszt\xe1lyok:",id:"absztrakt-oszt\xe1lyok",level:3},{value:"Interface:",id:"interface",level:3},{value:"T\xedpustagok.",id:"t\xedpustagok",level:2}],m={toc:k};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"3m-t\xe9tel-objektumorient\xe1lt-paradigma"},"3M. T\xe9tel: Objektumorient\xe1lt paradigma"),(0,n.kt)("h2",{id:"az-objektumorient\xe1lt-paradigma-alapfogalmai"},"Az objektumorient\xe1lt paradigma alapfogalmai."),(0,n.kt)("h3",{id:"programoz\xe1si-paradigma"},"Programoz\xe1si paradigma:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Az a m\xf3d, ahogyan egy-egy programoz\xe1si nyelv l\xe9trehoz\xe1s\xe1ra felhaszn\xe1lj\xe1k a programoz\xe1si alapfogalmakat. Valamint az a st\xedlus, amit az \xedgy l\xe9trehozott nyelvek sugallnak.")),(0,n.kt)("h4",{id:"egys\xe9gbe-z\xe1r\xe1s-encapsulation"},"Egys\xe9gbe z\xe1r\xe1s (Encapsulation):"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"L\xe9nyege, hogy minden objectnek az classon bel\xfcl az \xe1llapotai priv\xe1tak legyenek, hogy m\xe1s objectek ne tudj\xe1k azt direkt m\xf3dos\xedtani, esetleg publikus f\xfcggv\xe9nyek seg\xedts\xe9g\xe9vel, amiben szab\xe1lyokat adhatunk meg, hogy minek kell teljes\xfclnie, hogy a v\xe1ltoztat\xe1s sikeres legyen.")),(0,n.kt)("h4",{id:"absztrakci\xf3-abstraction"},"Absztrakci\xf3 (Abstraction):"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"L\xe9nyege, hogy egy nagy adat\xf6sszess\xe9gb\u0151l kiemelj\xfck a k\xf6z\xf6s, l\xe9nyeges tulajdons\xe1gokat \xe9s viselked\xe9sm\xf3dokat, az elt\xe9r\u0151eket, l\xe9nyegteleneket pedig elhanyagoljuk. Ennek az el\u0151nye, hogy az \xedgy kinyert adatokat ak\xe1r m\xe1sik programhoz is felhaszn\xe1lhatjuk, ak\xe1r b\xe1rmilyen v\xe1ltoztat\xe1s n\xe9lk\xfcl.")),(0,n.kt)("h4",{id:"\xf6r\xf6kl\u0151d\xe9s-inheritance"},"\xd6r\xf6kl\u0151d\xe9s (Inheritance):"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"L\xe9nyege, hogy az egyik objekt tulajdons\xe1gai \xe1tadhat\xf3ak legyenek a m\xe1sik objektnek (\xfajrafelhaszn\xe1lhat\xf3s\xe1g). Pl: gy\xfcm\xf6lcs\xf6k eset\xe9n. Ha van egy Fruit classunk, akkor amit abba bele\xedrunk, az az \xf6sszes gy\xfcm\xf6lcsre igaz lesz, \xe9s \xf6r\xf6k\xf6lhetik. Az adott classhoz meg hozz\xe1\xedrjuk a saj\xe1toss\xe1gait, ha sz\xfcks\xe9ges.")),(0,n.kt)("h4",{id:"polimorfizmus-t\xf6bbalak\xfas\xe1g"},"Polimorfizmus (t\xf6bbalak\xfas\xe1g):"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Akkor van jelent\u0151s\xe9ge, amikor t\xf6bb, egym\xe1ssal kapcsolatban \xe1ll\xf3 classunk van az \xf6r\xf6kl\u0151d\xe9snek k\xf6sz\xf6nhet\u0151en. P\xe9ld\xe1ul van egy animal classunk, \xe9s benne egy animalSound() f\xfcggv\xe9ny. Ezen animal class sub-classjai \xf6r\xf6kl\u0151d\xe9s eset\xe9n megkapj\xe1k ezt a f\xfcggv\xe9nyt \xe9s saj\xe1tukk\xe9nt haszn\xe1lhatj\xe1k fel, vagyis fel\xfcl\xedrhatj\xe1k (Overrideolhatj\xe1k)."),(0,n.kt)("li",{parentName:"ul"},"Lehet:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Statikus (ford\xedt\xe1si id\u0151ben) Method overloading-n\xe1l haszn\xe1latos."),(0,n.kt)("li",{parentName:"ul"},"Dinamikus (fut\xe1si id\u0151ben) Method overriding-n\xe1l haszn\xe1latos.")))),(0,n.kt)("h4",{id:"iter\xe1tor"},"Iter\xe1tor:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Olyan t\xedpus, amely poz\xedci\xf3t hat\xe1roz meg egy halmazban (t\xe1rol\xf3, adatfolyam). M\u0171veletein kereszt\xfcl biztos\xedtja a t\xe1rol\xf3 bej\xe1r\xe1s\xe1t, azaz a t\xe1rolt elemek egym\xe1s ut\xe1ni feldolgoz\xe1s\xe1t.")),(0,n.kt)("h4",{id:"algoritmus"},"Algoritmus:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\xc1ltal\xe1nosan megval\xf3s\xedtott f\xfcggv\xe9ny, amely minim\xe1lis k\xf6vetelm\xe9nyt t\xe1maszt azon adatokkal szemben, amelyeken v\xe9grehajt\xf3dik.")),(0,n.kt)("h4",{id:"aggreg\xe1ci\xf3"},"Aggreg\xe1ci\xf3:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"R\xe9sz-eg\xe9sz kapcsolat. A r\xe9szek alkotj\xe1k az eg\xe9szet. P\xe9ld\xe1ul toj\xe1s = toj\xe1sfeh\xe9rje + s\xe1rg\xe1ja. A r\xe9szek t\xfal\xe9lhetik az eg\xe9szet.")),(0,n.kt)("h4",{id:"kompoz\xedci\xf3"},"Kompoz\xedci\xf3:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Saj\xe1tos aggreg\xe1ci\xf3, amikor a r\xe9sz szorosan hozz\xe1tartozik az eg\xe9szhez. A r\xe9szek nem \xe9lik t\xfal az eg\xe9szet. P\xe9ld\xe1ul az emberi agy szorosan hozz\xe1tartozik az emberhez.")),(0,n.kt)("h4",{id:"deleg\xe1l\xe1s"},"Deleg\xe1l\xe1s:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Implement\xe1ci\xf3s mechanizmus, melynek sor\xe1n egy objektum tov\xe1bb\xedtja (deleg\xe1lja) a k\xe9r\xe9st egy m\xe1sik objektum fele."),(0,n.kt)("li",{parentName:"ul"},"A deleg\xe1lt objektum fogja feldolgozni a k\xe9r\xe9st. P\xe9lda: Java esem\xe9nykezel\xe9s (az esem\xe9nyfigyel\u0151 fele tov\xe1bb\xedt\xf3dik a k\xe9r\xe9s)")),(0,n.kt)("h4",{id:"f\xfcgg\u0151s\xe9g"},"F\xfcgg\u0151s\xe9g:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Komponensek k\xf6z\xf6tti f\xfcgg\u0151s\xe9g m\xe9rt\xe9ke. Megk\xfcl\xf6nb\xf6ztet\xfcnk laza \xe9s szoros csatol\xe1s\xfa rendszereket."),(0,n.kt)("li",{parentName:"ul"},"A laza csatol\xe1s\xfa rendszerek eset\xe9ben, a rendszer valamely komponens\xe9nek v\xe1ltoz\xe1sa nem vonja maga ut\xe1n a t\xf6bbi komponens m\xf3dos\xedt\xe1s\xe1t.")),(0,n.kt)("h2",{id:"oszt\xe1ly-objektum-p\xe9ld\xe1nyos\xedt\xe1s"},"Oszt\xe1ly, objektum, p\xe9ld\xe1nyos\xedt\xe1s."),(0,n.kt)("h3",{id:"oszt\xe1ly"},"Oszt\xe1ly:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Az oszt\xe1ly az egy felhaszn\xe1l\xf3 \xe1ltal l\xe9trehozott blueprint vagy protot\xedpus, ami alapj\xe1n az objecteket l\xe9trehozzuk."),(0,n.kt)("li",{parentName:"ul"},"Reprezent\xe1lja a tulajdons\xe1gok \xf6sszess\xe9g\xe9t vagy met\xf3dusokat, melyek gyakoriak az azonos t\xedpus\xfa objektekn\xe9l."),(0,n.kt)("li",{parentName:"ul"},"Tartalmazhat:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Hozz\xe1f\xe9r\xe9si m\xf3dos\xedt\xf3kat (public vagy private)"),(0,n.kt)("li",{parentName:"ul"},"Oszt\xe1ly kulcssz\xf3t"),(0,n.kt)("li",{parentName:"ul"},"Oszt\xe1ly nev\xe9t"),(0,n.kt)("li",{parentName:"ul"},"Super-oszt\xe1ly"),(0,n.kt)("li",{parentName:"ul"},"Interf\xe9sz"),(0,n.kt)("li",{parentName:"ul"},"T\xf6rzs (benne v\xe1ltoz\xf3k, f\xfcggv\xe9nyek, konstruktor)")))),(0,n.kt)("h3",{id:"objektum"},"Objektum:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Alapegys\xe9ge az objektum orient\xe1lt programoz\xe1snak, \xe9s egy adott oszt\xe1lyhoz kapcsol\xf3d\xf3an j\xf6n l\xe9tre. A l\xe9trehoz\xe1s folyamata a p\xe9ld\xe1nyos\xedt\xe1s, egy oszt\xe1lynak b\xe1rmennyi p\xe9ld\xe1nya lehet."),(0,n.kt)("li",{parentName:"ul"},"Van j\xf3l defini\xe1lt t\xe1rbeli c\xedme, adott c\xedmen p\xe9ld\xe1nyos\xedtott oszt\xe1ly attrib\xfatumai helyezkednek el, teh\xe1t az adott p\xe9ld\xe1nyhoz tartoz\xf3 adatr\xe9sz jelenik meg.")),(0,n.kt)("h3",{id:"p\xe9ld\xe1nyos\xedt\xe1s"},"P\xe9ld\xe1nyos\xedt\xe1s:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"P\xe9ld\xe1nyos\xedt\xe1s sor\xe1n egy l\xe9tez\u0151 oszt\xe1lyhoz kapcsol\xf3d\xf3an l\xe9trehozunk egy p\xe9ld\xe1nyt, amihez hozz\xe1rendel\u0151dik egy t\xe1rc\xedm, ahol be\xe1ll\xedt\xf3dik a kezd\u0151\xe1llapot (az objektum mindenk\xe9ppen kezd\u0151\xe1llapotba ker\xfcl, olyan nincs, hogy \xe1llapota nem defini\xe1lt). A kezd\u0151\xe1llapotba hoz\xe1s speci\xe1lis eszk\xf6ze a konstrukor, ennek csak p\xe9ld\xe1nyos\xedt\xe1skor van szerepe (new kulcssz\xf3). Innent\u0151l kezdve az objektum \xe9l, \xe9s oszt\xe1ly\xe1nak megfelel\u0151en viselkedik. A konstruktor ellent\xe9tes m\u0171velete a destruktor, \xe1ltal\xe1ban a konstruktor lek\xf6t\xf6tt er\u0151forr\xe1sait szabad\xedtja fel.")),(0,n.kt)("h2",{id:"\xf6r\xf6kl\u0151d\xe9s-oszt\xe1lyhierarchia"},"\xd6r\xf6kl\u0151d\xe9s, oszt\xe1lyhierarchia."),(0,n.kt)("h3",{id:"oszt\xe1lyhierarchia"},"Oszt\xe1lyhierarchia:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Az object-oriented programoz\xe1sban minden class \xf6r\xf6kl\u0151d\xe9s szintj\xe9n \xe1ll kapcsolatban egym\xe1ssal. Minden class egy m\xe1sik class subclass-a, ami a subclass f\xf6l\xf6tt van, \u0151 a superclass. Egy subclass minden olyat meg\xf6r\xf6k\xf6l, amit a superclass tud, de tartalmazhat \xfaj inform\xe1ci\xf3kat \xe9s \xfajradefini\xe1lhat r\xe9gieket."),(0,n.kt)("li",{parentName:"ul"},"Ha minden classnak egy superclassa van, akkor azt egyszeres \xf6r\xf6kl\u0151d\xe9snek h\xedvjuk, ha t\xf6bb, akkor t\xf6bbsz\xf6r\xf6s \xf6r\xf6kl\u0151d\xe9snek."),(0,n.kt)("li",{parentName:"ul"},"Az egyszeres \xf6r\xf6kl\u0151d\xe9s oszt\xe1lyhierarchi\xe1ja egy fa, a t\xf6bbsz\xf6r\xf6s\xe9 pedig egy gr\xe1f."),(0,n.kt)("li",{parentName:"ul"},"Minden class legtetej\xe9n pedig az Object class \xe1ll."),(0,n.kt)("li",{parentName:"ul"},"\u0150 a legalapabb class, neki nincs superclassa."),(0,n.kt)("li",{parentName:"ul"},"Amikor egy met\xf3dust megh\xedvunk egy objektumon, akkor a met\xf3dus el\u0151sz\xf6r az objektum oszt\xe1ly\xe1t keresi meg, ut\xe1na annak a superclass-\xe1t, \xe9s \xedgy tov\xe1bb fel a hierarchi\xe1n.")),(0,n.kt)("h2",{id:"polimorfizmus-met\xf3dust\xfalterhel\xe9s"},"Polimorfizmus, met\xf3dust\xfalterhel\xe9s."),(0,n.kt)("h3",{id:"met\xf3dust\xfalterhel\xe9s"},"Met\xf3dust\xfalterhel\xe9s:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"OO-rendszerek \xe1ltal\xe1ban megengedik a met\xf3dusnevek t\xfalterhel\xe9s\xe9t, adott oszt\xe1lyban lehetnek azonos nev\u0171 met\xf3dusok, ilyenkor az aktu\xe1lis param\xe9terek sz\xe1mainak vagy sorrendj\xe9nek megad\xe1sa d\xf6ntik el, melyik fut le.")),(0,n.kt)("h2",{id:"a-bez\xe1r\xe1si-eszk\xf6zrendszer"},"A bez\xe1r\xe1si eszk\xf6zrendszer."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Az OO l\xe9nyege az, hogy az objektumok bels\u0151 szerkezete el van rejtve a program t\xf6bbi r\xe9sze el\u0151l, az objektum \xe1llapot\xe1t csak az adott objektum ismeri, k\xedv\xfclr\u0151l pedig csak szab\xe1lyozottan, a met\xf3dusokon kereszt\xfcl tudjuk ezt v\xe1ltoztatni.")),(0,n.kt)("h2",{id:"absztrakt-oszt\xe1lyok-\xe9s-interf\xe9szek"},"Absztrakt oszt\xe1lyok \xe9s interf\xe9szek."),(0,n.kt)("h3",{id:"absztrakt-oszt\xe1lyok"},"Absztrakt oszt\xe1lyok:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Az absztrakt oszt\xe1lyok c\xe9lja, hogy egy blueprintet ny\xfajtsanak a sz\xe1rmaztatott oszt\xe1lyoknak \xe9s fel\xe1ll\xedtsanak n\xe9h\xe1ny szab\xe1lyt, amit a sz\xe1rmaztatott oszt\xe1lyoknak musz\xe1j lesz implement\xe1lniuk, amikor meg\xf6r\xf6klik \u0151ket. Az absztrakt oszt\xe1lyok nem p\xe9ld\xe1nyos\xedthat\xf3ak."),(0,n.kt)("li",{parentName:"ul"},"Lehetnek nem absztrakt met\xf3dusai is."),(0,n.kt)("li",{parentName:"ul"},"Nem t\xe1mogatja a multiple inheritance-t."),(0,n.kt)("li",{parentName:"ul"},"V\xe1ltoz\xf3inak nem musz\xe1j csak static \xe9s final-nak lenni, az interace-szel ellent\xe9tben."),(0,n.kt)("li",{parentName:"ul"},"Implement\xe1lhat interface-t, viszont az interface nem implement\xe1lhat abstract class-t."),(0,n.kt)("li",{parentName:"ul"},"Class tagjai lehetnek publicon k\xedv\xfcl priv\xe1tak \xe9s protectedek is, ellent\xe9tben az interface-szel.")),(0,n.kt)("h3",{id:"interface"},"Interface:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Egy classhoz hasonl\xf3an egy interfacenek lehetnek met\xf3dusai \xe9s v\xe1ltoz\xf3i, de a met\xf3dusok egy interfaceben mind absztraktak."),(0,n.kt)("li",{parentName:"ul"},"Azt mondja meg, hogy egy classnak mit kell csin\xe1lnia, nem azt, hogy hogyan (blueprint of a class)."),(0,n.kt)("li",{parentName:"ul"},"Minden met\xf3dust ami egy interfacebe van deklar\xe1lva, ha egy class implement\xe1lja az interface-t, akkor musz\xe1j implement\xe1lni az \xf6sszes met\xf3dus\xe1t is."),(0,n.kt)("li",{parentName:"ul"},"Ha egy class implement\xe1lja az interface-t de nem tervezi minden met\xf3dus haszn\xe1lni (nem \xedr mindegyik met\xf3dus t\xf6rzs\xe9be), akkor a class absztrakt."),(0,n.kt)("li",{parentName:"ul"},"Megval\xf3s\xedhat\xf3 vele a multiple inheritance, mert egy class t\xf6bb interface-t is implement\xe1lhat.")),(0,n.kt)("h2",{id:"t\xedpustagok"},"T\xedpustagok."))}u.isMDXComponent=!0}}]);