"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[383],{3905:(e,t,l)=>{l.d(t,{Zo:()=>z,kt:()=>d});var a=l(7294);function s(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function o(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?o(Object(l),!0).forEach((function(t){s(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):o(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function i(e,t){if(null==e)return{};var l,a,s=function(e,t){if(null==e)return{};var l,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)l=o[a],t.indexOf(l)>=0||(s[l]=e[l]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)l=o[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(s[l]=e[l])}return s}var n=a.createContext({}),k=function(e){var t=a.useContext(n),l=t;return e&&(l="function"==typeof e?e(t):r(r({},t),e)),l},z=function(e){var t=k(e.components);return a.createElement(n.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var l=e.components,s=e.mdxType,o=e.originalType,n=e.parentName,z=i(e,["components","mdxType","originalType","parentName"]),u=k(l),d=s,g=u["".concat(n,".").concat(d)]||u[d]||m[d]||o;return l?a.createElement(g,r(r({ref:t},z),{},{components:l})):a.createElement(g,r({ref:t},z))}));function d(e,t){var l=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=l.length,r=new Array(o);r[0]=u;var i={};for(var n in t)hasOwnProperty.call(t,n)&&(i[n]=t[n]);i.originalType=e,i.mdxType="string"==typeof e?e:s,r[1]=i;for(var k=2;k<o;k++)r[k]=l[k];return a.createElement.apply(null,r)}return a.createElement.apply(null,l)}u.displayName="MDXCreateElement"},6671:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>n,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>k});var a=l(7462),s=(l(7294),l(3905));const o={sidebar_position:3},r="3A. T\xe9tel: Objektumorient\xe1lt paradigma",i={unversionedId:"exam/informatika/variant-1/3",id:"exam/informatika/variant-1/3",title:"3A. T\xe9tel: Objektumorient\xe1lt paradigma",description:"Az objektumorient\xe1lt paradigma alapfogalmai.",source:"@site/docs/exam/informatika/variant-1/3.md",sourceDirName:"exam/informatika/variant-1",slug:"/exam/informatika/variant-1/3",permalink:"/docs/exam/informatika/variant-1/3",draft:!1,editUrl:"https://github.com/vbartalis/vbartalis.github.io/tree/master/docs/exam/informatika/variant-1/3.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"2A. T\xe9tel: Lexik\xe1lis egys\xe9gek",permalink:"/docs/exam/informatika/variant-1/2"},next:{title:"4A. T\xe9tel: Oper\xe1ci\xf3s rendszerek",permalink:"/docs/exam/informatika/variant-1/4"}},n={},k=[{value:"Az objektumorient\xe1lt paradigma alapfogalmai.",id:"az-objektumorient\xe1lt-paradigma-alapfogalmai",level:2},{value:"Egys\xe9gbez\xe1r\xe1s:",id:"egys\xe9gbez\xe1r\xe1s",level:4},{value:"Absztrakci\xf3:",id:"absztrakci\xf3",level:4},{value:"\xd6r\xf6kl\u0151d\xe9s:",id:"\xf6r\xf6kl\u0151d\xe9s",level:4},{value:"Polimorfizmus:",id:"polimorfizmus",level:4},{value:"Programoz\xe1si paradigma:",id:"programoz\xe1si-paradigma",level:4},{value:"Absztrakt adatt\xedpus:",id:"absztrakt-adatt\xedpus",level:4},{value:"Objektumorient\xe1lt programoz\xe1s:",id:"objektumorient\xe1lt-programoz\xe1s",level:4},{value:"Oszt\xe1ly:",id:"oszt\xe1ly",level:4},{value:"Objektum:",id:"objektum",level:4},{value:"\xdczenet:",id:"\xfczenet",level:4},{value:"Inform\xe1ci\xf3 elrejt\xe9se:",id:"inform\xe1ci\xf3-elrejt\xe9se",level:4},{value:"Met\xf3dusok fel\xfcl\xedr\xe1sa:",id:"met\xf3dusok-fel\xfcl\xedr\xe1sa",level:4},{value:"Konstruktor:",id:"konstruktor",level:4},{value:"Destruktor:",id:"destruktor",level:4},{value:"F\xfcgg\u0151s\xe9g:",id:"f\xfcgg\u0151s\xe9g",level:4},{value:"Aggreg\xe1ci\xf3:",id:"aggreg\xe1ci\xf3",level:4},{value:"Kompoz\xedci\xf3:",id:"kompoz\xedci\xf3",level:4},{value:"Deleg\xe1l\xe1s:",id:"deleg\xe1l\xe1s",level:4},{value:"Iter\xe1tor:",id:"iter\xe1tor",level:4},{value:"Algoritmus:",id:"algoritmus",level:4},{value:"F\xfcggv\xe9nyobjektum:",id:"f\xfcggv\xe9nyobjektum",level:4},{value:"F\xfcggv\xe9nysablon:",id:"f\xfcggv\xe9nysablon",level:4},{value:"Oszt\xe1lysablon:",id:"oszt\xe1lysablon",level:4},{value:"Priv\xe1t \xf6r\xf6k\xedt\xe9s:",id:"priv\xe1t-\xf6r\xf6k\xedt\xe9s",level:4},{value:"Oszt\xe1ly, objektum, p\xe9ld\xe1nyos\xedt\xe1s.",id:"oszt\xe1ly-objektum-p\xe9ld\xe1nyos\xedt\xe1s",level:2},{value:"Oszt\xe1ly",id:"oszt\xe1ly-1",level:3},{value:"Objektum",id:"objektum-1",level:3},{value:"P\xe9ld\xe1nyos\xedt\xe1s",id:"p\xe9ld\xe1nyos\xedt\xe1s",level:3},{value:"\xd6r\xf6kl\u0151d\xe9s, oszt\xe1lyhierarchia.",id:"\xf6r\xf6kl\u0151d\xe9s-oszt\xe1lyhierarchia",level:2},{value:"\xd6r\xf6kl\u0151d\xe9s",id:"\xf6r\xf6kl\u0151d\xe9s-1",level:3},{value:"Oszt\xe1lyhierarchia",id:"oszt\xe1lyhierarchia",level:3},{value:"Polimorfizmus, met\xf3dust\xfalterhel\xe9s.",id:"polimorfizmus-met\xf3dust\xfalterhel\xe9s",level:2},{value:"Polimorfizmus",id:"polimorfizmus-1",level:3},{value:"Met\xf3dust\xfalterhel\xe9s",id:"met\xf3dust\xfalterhel\xe9s",level:3},{value:"A bez\xe1r\xe1si eszk\xf6zrendszer.",id:"a-bez\xe1r\xe1si-eszk\xf6zrendszer",level:2},{value:"Absztrakt oszt\xe1lyok \xe9s interf\xe9szek.",id:"absztrakt-oszt\xe1lyok-\xe9s-interf\xe9szek",level:2},{value:"Absztrakt oszt\xe1ly",id:"absztrakt-oszt\xe1ly",level:3},{value:"Interf\xe9sz",id:"interf\xe9sz",level:3},{value:"T\xedpustagok.",id:"t\xedpustagok",level:2}],z={toc:k};function m(e){let{components:t,...l}=e;return(0,s.kt)("wrapper",(0,a.Z)({},z,l,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"3a-t\xe9tel-objektumorient\xe1lt-paradigma"},"3A. T\xe9tel: Objektumorient\xe1lt paradigma"),(0,s.kt)("h2",{id:"az-objektumorient\xe1lt-paradigma-alapfogalmai"},"Az objektumorient\xe1lt paradigma alapfogalmai."),(0,s.kt)("h4",{id:"egys\xe9gbez\xe1r\xe1s"},"Egys\xe9gbez\xe1r\xe1s:"),(0,s.kt)("p",null,"Az adatok \xe9s a met\xf3dusok oszt\xe1lyba val\xf3 \xf6sszez\xe1r\xe1s\xe1t jelenti."),(0,s.kt)("h4",{id:"absztrakci\xf3"},"Absztrakci\xf3:"),(0,s.kt)("p",null,"Seg\xedts\xe9g\xe9vel priv\xe1t implement\xe1ci\xf3kat rejthet\xfcnk el egy nyilv\xe1nos interf\xe9sz m\xf6g\xe9"),(0,s.kt)("h4",{id:"\xf6r\xf6kl\u0151d\xe9s"},"\xd6r\xf6kl\u0151d\xe9s:"),(0,s.kt)("p",null,"egy objektumot vagy egy oszt\xe1lyt alapj\xe1ul v\xe1lasztunk egy m\xe1sik objektumnak vagy oszt\xe1lynak, megtartva a hasonl\xf3 implement\xe1ci\xf3t. A legt\xf6bb oszt\xe1ly-alap\xfa objektum-orient\xe1lt nyelvben egy \xf6r\xf6kl\u0151d\xe9sen kereszt\xfcl l\xe9trehozott objektum a \u201egyermekobjektum\u201d megkapja az \u0151 \u201esz\xfcl\u0151objektum\xe1nak\u201d minden tulajdons\xe1g\xe1t \xe9s viselked\xe9s\xe9t, lesz\xe1m\xedtva a konstruktorokat, destruktorokat, t\xfalterhelt oper\xe1torait \xe9s bar\xe1t f\xfcggv\xe9nyeit."),(0,s.kt)("h4",{id:"polimorfizmus"},"Polimorfizmus:"),(0,s.kt)("p",null,"T\xf6bbalak\xfas\xe1g. Egy t\xedpuselm\xe9leti fogalom, amely szerint egy \u0151soszt\xe1ly t\xedpus\xfa v\xe1ltoz\xf3 hivatkozhat ugyanazon k\xf6z\xf6s \u0151soszt\xe1lyb\xf3l sz\xe1rmaz\xf3 oszt\xe1lyok p\xe9ld\xe1nyaira. A polimorfizmus lehet statikus \xe9s dinamikus."),(0,s.kt)("h4",{id:"programoz\xe1si-paradigma"},"Programoz\xe1si paradigma:"),(0,s.kt)("p",null,"Programoz\xe1si m\xf3d. Alapvet\u0151en a program fel\xe9p\xedt\xe9s\xe9re haszn\xe1lt eszk\xf6zk\xe9szletet jelenti."),(0,s.kt)("h4",{id:"absztrakt-adatt\xedpus"},"Absztrakt adatt\xedpus:"),(0,s.kt)("p",null,"Az adatt\xedpus le\xedr\xe1s\xe1nak legmagasabb szintje, amelyben az adatt\xedpust \xfagy specifik\xe1ljuk, hogy az adatok \xe1br\xe1zol\xe1s\xe1ra \xe9s a m\u0171veletek implement\xe1ci\xf3j\xe1ra semmilyen el\u0151\xedr\xe1st nem adunk. Lehet\u0151leg matematikai fogalmakat haszn\xe1lva \xedrjuk le az adatt\xedpust."),(0,s.kt)("h4",{id:"objektumorient\xe1lt-programoz\xe1s"},"Objektumorient\xe1lt programoz\xe1s:"),(0,s.kt)("p",null,"Olyan programoz\xe1si paradigma, amely a programokat objektumokb\xf3l \xe9p\xedti fel. A program m\u0171k\xf6d\xe9se tulajdonk\xe9ppen objektumok kommunik\xe1ci\xf3j\xe1t jelenti. Legfontosabb alapelvei: egys\xe9gbez\xe1r\xe1s, \xf6r\xf6kl\u0151d\xe9s, polimorfizmus."),(0,s.kt)("h4",{id:"oszt\xe1ly"},"Oszt\xe1ly:"),(0,s.kt)("p",null,"Az oszt\xe1ly egy felhaszn\xe1l\xf3i t\xedpus, amelynek alapj\xe1n p\xe9ld\xe1nyok hozhat\xf3k l\xe9tre. Az oszt\xe1ly alapvet\u0151en adat \xe9s met\xf3dus defin\xedci\xf3kat tartalmaz."),(0,s.kt)("h4",{id:"objektum"},"Objektum:"),(0,s.kt)("p",null,"Inform\xe1ci\xf3t t\xe1rol \xe9s k\xe9r\xe9sre m\u0171veleteket v\xe9gez. Van \xe1llapota, viselked\xe9se \xe9s fut\xe1sid\u0151ben azonos\xedthat\xf3."),(0,s.kt)("h4",{id:"\xfczenet"},"\xdczenet:"),(0,s.kt)("p",null,"Objektumhoz tov\xe1bb\xedtott k\xe9r\xe9s. V\xe1laszk\xe9nt az objektum v\xe9grehajtja a k\xe9rt m\u0171veletet."),(0,s.kt)("h4",{id:"inform\xe1ci\xf3-elrejt\xe9se"},"Inform\xe1ci\xf3 elrejt\xe9se:"),(0,s.kt)("p",null,"Az objektum elrejti az adatait \xe9s bizonyos m\u0171veleteit. Ez azt jelenti, hogy nem tudjuk pontosan, hogy egy objektumban hogyan vannak az adatok \xe1br\xe1zolva, s\u0151t a m\u0171veletek implement\xe1ci\xf3it sem ismerj\xfck. Az inform\xe1ci\xf3k elrejt\xe9se az objektum biztons\xe1g\xe1t szolg\xe1lja."),(0,s.kt)("h4",{id:"met\xf3dusok-fel\xfcl\xedr\xe1sa"},"Met\xf3dusok fel\xfcl\xedr\xe1sa:"),(0,s.kt)("p",null,"Egy oszt\xe1lyhierarchi\xe1n bel\xfcl az ut\xf3doszt\xe1ly \xfajradefini\xe1lja az \u0151soszt\xe1ly met\xf3dus\xe1t. (azonos n\xe9v, azonos szignat\xfara). Ha \u0151soszt\xe1ly t\xedpus\xfa mutat\xf3n vagy referenci\xe1n kereszt\xfcl \xe9rj\xfck el az oszt\xe1lyhierarchia p\xe9ld\xe1nyait \xe9s ezen kereszt\xfcl megh\xedvjuk a fel\xfcl\xedrt met\xf3dust, akkor fut\xe1si id\u0151ben d\u0151l el, hogy pontosan melyik met\xf3dus ker\xfcl megh\xedv\xe1sra. (dinamikus, fut\xe1sidej\u0171 k\xf6t\xe9s)."),(0,s.kt)("h4",{id:"konstruktor"},"Konstruktor:"),(0,s.kt)("p",null,"Az a m\u0171velet, amely inicializ\xe1lja az objektumot. Automatikusan h\xedv\xf3dik. Egy oszt\xe1lyhoz annyif\xe9le konstruktort k\xe9sz\xedt\xfcnk, ah\xe1nyf\xe9le k\xe9ppen lehet\u0151v\xe9 tessz\xfck a p\xe9ld\xe1nyok inicializ\xe1l\xe1s\xe1t."),(0,s.kt)("h4",{id:"destruktor"},"Destruktor:"),(0,s.kt)("p",null,"A konstruktorral ellent\xe9tes m\u0171velet, \xe1ltal\xe1ban a konstruktorban lek\xf6t\xf6tt er\u0151forr\xe1sokat szabad\xedtja fel. Az objektum megsemmis\xedt\xe9se el\u0151tt hajt\xf3dik v\xe9gre \xe9s automatikusan h\xedv\xf3dik."),(0,s.kt)("h4",{id:"f\xfcgg\u0151s\xe9g"},"F\xfcgg\u0151s\xe9g:"),(0,s.kt)("p",null,"Komponensek k\xf6z\xf6tti f\xfcgg\u0151s\xe9g m\xe9rt\xe9ke. Megk\xfcl\xf6nb\xf6ztet\xfcnk laza \xe9s szoros csatol\xe1s\xfa rendszereket. A laza csatol\xe1s\xfa rendszerek eset\xe9ben, a rendszer valamely komponens\xe9nek v\xe1ltoz\xe1sa nem vonja maga ut\xe1n a t\xf6bbi komponenes m\xf3dos\xedt\xe1s\xe1t."),(0,s.kt)("h4",{id:"aggreg\xe1ci\xf3"},"Aggreg\xe1ci\xf3:"),(0,s.kt)("p",null,"R\xe9sz-eg\xe9sz kapcsolat. A r\xe9szek alkotj\xe1k az eg\xe9szet. P\xe9ld\xe1ul az aut\xf3 motor, v\xe1z \xe9s kerekek aggreg\xe1ci\xf3ja. A r\xe9szek t\xfal\xe9lhetik az eg\xe9szet."),(0,s.kt)("h4",{id:"kompoz\xedci\xf3"},"Kompoz\xedci\xf3:"),(0,s.kt)("p",null,"Saj\xe1tos aggreg\xe1ci\xf3, amikor a r\xe9sz szorosan hozz\xe1tartozik az eg\xe9szhez. A r\xe9szek nem \xe9lik t\xfal az eg\xe9szet. P\xe9ld\xe1ul az emberi agy szorosan hozz\xe1tartozik az emberhez"),(0,s.kt)("h4",{id:"deleg\xe1l\xe1s"},"Deleg\xe1l\xe1s:"),(0,s.kt)("p",null,"Implement\xe1ci\xf3s mechanizmus, melynek sor\xe1n egy objektum tov\xe1bb\xedtja (deleg\xe1lja) a k\xe9r\xe9st egy m\xe1sik objektum fele. A deleg\xe1lt objektum fogja feldolgozni a k\xe9r\xe9st. P\xe9lda: Java esem\xe9nykezel\xe9s (az esem\xe9nyfigyel\u0151 fele tov\xe1bb\xedt\xf3dik a k\xe9r\xe9s)"),(0,s.kt)("h4",{id:"iter\xe1tor"},"Iter\xe1tor:"),(0,s.kt)("p",null,"Olyan t\xedpus, amely poz\xedci\xf3t hat\xe1roz meg egy halmazban (t\xe1rol\xf3, adatfolyam). M\u0171veletein kereszt\xfcl biztos\xedtja a t\xe1rol\xf3 bej\xe1r\xe1s\xe1t, azaz a t\xe1rolt elemek egym\xe1s ut\xe1ni feldolgoz\xe1s\xe1t."),(0,s.kt)("h4",{id:"algoritmus"},"Algoritmus:"),(0,s.kt)("p",null,"\xc1ltal\xe1nosan megval\xf3s\xedtott f\xfcggv\xe9ny, amely minim\xe1lis k\xf6vetelm\xe9nyt t\xe1maszt azon adatokkal szemben, amelyeken v\xe9grehajt\xf3dik."),(0,s.kt)("h4",{id:"f\xfcggv\xe9nyobjektum"},"F\xfcggv\xe9nyobjektum:"),(0,s.kt)("p",null,"F\xfcggv\xe9nyk\xe9nt viselked\u0151 objektum. Az az el\u0151nye a f\xfcggv\xe9nymutat\xf3hoz k\xe9pest, hogy mint objektum, \xe1llapotot is t\xe1rol, nemcsak f\xfcggv\xe9nyk\xe9nt viselkedik. Megval\xf3s\xedt\xe1s: olyan oszt\xe1llyal, amelyben \xe9rtelmezz\xfck a f\xfcggv\xe9nyh\xedv\xe1s oper\xe1tort. Ezen k\xedv\xfcl az oszt\xe1ly tartalmazhat adattagokat \xe9s m\xe1s seg\xe9dm\u0171veleteket is."),(0,s.kt)("h4",{id:"f\xfcggv\xe9nysablon"},"F\xfcggv\xe9nysablon:"),(0,s.kt)("p",null,"T\xedpusparam\xe9terekkel ell\xe1tott f\xfcggv\xe9ny, amely egy f\xfcggv\xe9nycsal\xe1dot hat\xe1roz meg."),(0,s.kt)("h4",{id:"oszt\xe1lysablon"},"Oszt\xe1lysablon:"),(0,s.kt)("p",null,"T\xedpusparam\xe9terekkel ell\xe1tott oszt\xe1ly, amely egy t\xedpuscsal\xe1dot hat\xe1roz meg"),(0,s.kt)("h4",{id:"priv\xe1t-\xf6r\xf6k\xedt\xe9s"},"Priv\xe1t \xf6r\xf6k\xedt\xe9s:"),(0,s.kt)("p",null,"Hozz\xe1f\xe9r\xe9s-sz\u0171k\xedt\u0151 hat\xe1sa van. Az \u0151soszt\xe1lyt\xf3l \xe1tvett adat \xe9s met\xf3dustagok priv\xe1t tagokk\xe1 alakulnak, ez\xe1ltal az ut\xf3doszt\xe1ly m\xe1r nem biztos\xedtja az \u0151soszt\xe1ly \xe1ltal meghat\xe1rozott viselked\xe9sm\xf3dot. Az ut\xf3doszt\xe1ly az \u0151soszt\xe1ly implement\xe1ci\xf3j\xe1t \xf6r\xf6kli \xe9s nem annak interf\xe9sz\xe9t."),(0,s.kt)("h2",{id:"oszt\xe1ly-objektum-p\xe9ld\xe1nyos\xedt\xe1s"},"Oszt\xe1ly, objektum, p\xe9ld\xe1nyos\xedt\xe1s."),(0,s.kt)("h3",{id:"oszt\xe1ly-1"},"Oszt\xe1ly"),(0,s.kt)("p",null,"Az oszt\xe1ly egy felhaszn\xe1l\xf3i t\xedpus, amelynek alapj\xe1n p\xe9ld\xe1nyok (objektumok) hozhat\xf3k l\xe9tre. Az oszt\xe1ly alapvet\u0151en adat \xe9s met\xf3dus defin\xedci\xf3kat tartalmaz."),(0,s.kt)("h3",{id:"objektum-1"},"Objektum"),(0,s.kt)("p",null,"Az objektum inform\xe1ci\xf3t t\xe1rol \xe9s k\xe9r\xe9sre m\u0171veleteket v\xe9gez. Van \xe1llapota, viselked\xe9se \xe9s fut\xe1sid\u0151ben azonos\xedthat\xf3."),(0,s.kt)("h3",{id:"p\xe9ld\xe1nyos\xedt\xe1s"},"P\xe9ld\xe1nyos\xedt\xe1s"),(0,s.kt)("p",null,"A p\xe9ld\xe1nyos\xedt\xe1s sor\xe1n egy l\xe9tez\u0151 oszt\xe1lyhoz kapcsol\xf3d\xf3an l\xe9trehozunk egy p\xe9ld\xe1nyt, amihez hozz\xe1rendel\u0151dik egy t\xe1rc\xedm, ahol be\xe1ll\xedt\xf3dik a kezd\u0151\xe1llapot."),(0,s.kt)("h2",{id:"\xf6r\xf6kl\u0151d\xe9s-oszt\xe1lyhierarchia"},"\xd6r\xf6kl\u0151d\xe9s, oszt\xe1lyhierarchia."),(0,s.kt)("h3",{id:"\xf6r\xf6kl\u0151d\xe9s-1"},"\xd6r\xf6kl\u0151d\xe9s"),(0,s.kt)("p",null,"Az \xf6r\xf6kl\u0151d\xe9s az \xfajra felhaszn\xe1lhat\xf3s\xe1g fontos eszk\xf6ze, imperat\xedv OO-nyelvekben oszt\xe1lyokhoz k\xf6t\u0151dik, mindig van egy alaposzt\xe1ly a viszony defini\xe1l\xe1s\xe1n\xe1l, ehhez kapcsol\xf3d\xf3an, vele \xf6r\xf6kl\xe9si viszonyban j\xf6n l\xe9tre az aloszt\xe1ly, mely defini\xe1l\xe1sa pillanat\xe1t\xf3l \xe1tveszi bez\xe1r\xe1s \xe1ltal megengedett l\xe1that\xf3s\xe1gi szint\u0171 szuperoszt\xe1ly-beli attrib\xfatumokat \xe9s met\xf3dusokat, \xe9s ezeket azonnal haszn\xe1lhatja. Emellett ",(0,s.kt)("strong",{parentName:"p"},"\xfaj attrib\xfatumokat \xe9s met\xf3dusokat defini\xe1lhat"),", ",(0,s.kt)("strong",{parentName:"p"},"met\xf3dusokat \xfajra implement\xe1lhatja"),"."),(0,s.kt)("h3",{id:"oszt\xe1lyhierarchia"},"Oszt\xe1lyhierarchia"),(0,s.kt)("p",null,"Az oszt\xe1lyhierarchia egyszeres \xf6r\xf6kl\u0151d\xe9sn\xe9l fa, t\xf6bbsz\xf6r\xf6s \xf6r\xf6kl\u0151d\xe9sn\xe9l a ciklikus gr\xe1f, mindkett\u0151ben \xe9rtelmezhet\u0151ek utak, egy \xfaton elhelyezked\u0151 oszt\xe1lyok ir\xe1nyt\xf3l f\xfcgg\u0151en egym\xe1s lesz\xe1rmazott - vagy el\u0151doszt\xe1lyai. Az egym\xe1ssal \xf6r\xf6kl\u0151d\xe9si viszonyban nem l\xe9v\u0151 oszt\xe1lyok a kliensoszt\xe1lyok. Az \xf6r\xf6kl\u0151d\xe9si viszony aszimmetrikus, a lesz\xe1rmazott l\xe1tja a szuperoszt\xe1ly eszk\xf6zeit, a szuperoszt\xe1ly viszont a lesz\xe1rmazott \xfaj eszk\xf6zeit m\xe1r nem."),(0,s.kt)("h2",{id:"polimorfizmus-met\xf3dust\xfalterhel\xe9s"},"Polimorfizmus, met\xf3dust\xfalterhel\xe9s."),(0,s.kt)("h3",{id:"polimorfizmus-1"},"Polimorfizmus"),(0,s.kt)("p",null,"Egy aloszt\xe1ly \xfajra implement\xe1lhatja sz\xfcl\u0151oszt\xe1lya met\xf3dusait, specifik\xe1ci\xf3j\xe1t nem m\xf3dos\xedthatja, implement\xe1ci\xf3j\xe1t viszont \xfajra\xedrhatja. Ahol ez megt\xf6rt\xe9nik, polimorf met\xf3dus lesz. A k\xf6t\xe9s d\xf6nti el, ezek k\xf6z\xfcl melyik fusson le. A k\xf6t\xe9s k\xe9t fajt\xe1ja a ",(0,s.kt)("strong",{parentName:"p"},"statikus"),", amin\xe9l ford\xedt\xe1skor eld\u0151l, h\xedv\xe1skor melyik fut le, \xe9s a ",(0,s.kt)("strong",{parentName:"p"},"dinamikus"),", amin\xe9l fut\xe1si id\u0151ben d\u0151l el."),(0,s.kt)("h3",{id:"met\xf3dust\xfalterhel\xe9s"},"Met\xf3dust\xfalterhel\xe9s"),(0,s.kt)("p",null,"OO-rendszerek \xe1ltal\xe1ban megengedik a met\xf3dusnevek t\xfalterhel\xe9s\xe9t, adott oszt\xe1lyban lehetnek azonos nev\u0171 met\xf3dusok, ilyenkor ki\xe9rt\xe9kel\xe9s (param\xe9terlista) d\xf6nti el, melyik fut le."),(0,s.kt)("h2",{id:"a-bez\xe1r\xe1si-eszk\xf6zrendszer"},"A bez\xe1r\xe1si eszk\xf6zrendszer."),(0,s.kt)("p",null,"Az OO l\xe9nyege az, hogy az objektumok bels\u0151 szerkezete el van rejtve a program t\xf6bbi r\xe9sze el\u0151l, az objektum \xe1llapot\xe1t csak az adott objektum ismeri, k\xedv\xfclr\u0151l pedig csak szab\xe1lyozottan, a met\xf3dusokon kereszt\xfcl tudjuk ezt v\xe1ltoztatni."),(0,s.kt)("h2",{id:"absztrakt-oszt\xe1lyok-\xe9s-interf\xe9szek"},"Absztrakt oszt\xe1lyok \xe9s interf\xe9szek."),(0,s.kt)("h3",{id:"absztrakt-oszt\xe1ly"},"Absztrakt oszt\xe1ly"),(0,s.kt)("p",null,"Olyan oszt\xe1ly, amelynek van legal\xe1bb egy absztrakt m\u0171velete. Fel\xfcletet hat\xe1roz meg \xe9s nem lehet p\xe9ld\xe1nyos\xedtani. Absztrakt oszt\xe1ly az absztrakt m\u0171veleteinek implement\xe1l\xe1s\xe1t az ut\xf3doszt\xe1lyokra b\xedzza. Mivel nincs konkr\xe9t viselked\xe9sm\xf3dja, nem p\xe9ld\xe1nyos\xedthat\xf3, csak \xf6r\xf6k\xf6ltethet\u0151, a viselked\xe9smint\xe1t lesz\xe1rmazott oszt\xe1lyok konkretiz\xe1lj\xe1k."),(0,s.kt)("h3",{id:"interf\xe9sz"},"Interf\xe9sz"),(0,s.kt)("p",null,"Viselked\xe9sm\xf3dot defini\xe1l. Gyakorlatilag egy m\u0171velethalmaz deklar\xe1ci\xf3j\xe1t jelenti. Ha egy oszt\xe1ly implement\xe1l egy adott interf\xe9szt, akkor p\xe9ld\xe1nyai az interf\xe9szben meghat\xe1rozott viselked\xe9ssel fognak rendelkezni. Csak konstans adattagokat tartalmazhat \xe9s minden tagja nyilv\xe1nos."),(0,s.kt)("h2",{id:"t\xedpustagok"},"T\xedpustagok."),(0,s.kt)("p",null,"tulajdons\xe1gok, met\xf3dusok, konstruktorok, mez\u0151k"))}m.isMDXComponent=!0}}]);