"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9982],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>z});var r=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function k(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=r.createContext({}),i=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},m=function(e){var t=i(e.components);return r.createElement(o.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,l=e.mdxType,n=e.originalType,o=e.parentName,m=k(e,["components","mdxType","originalType","parentName"]),p=i(a),z=l,d=p["".concat(o,".").concat(z)]||p[z]||g[z]||n;return a?r.createElement(d,s(s({ref:t},m),{},{components:a})):r.createElement(d,s({ref:t},m))}));function z(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=a.length,s=new Array(n);s[0]=p;var k={};for(var o in t)hasOwnProperty.call(t,o)&&(k[o]=t[o]);k.originalType=e,k.mdxType="string"==typeof e?e:l,s[1]=k;for(var i=2;i<n;i++)s[i]=a[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},1942:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>g,frontMatter:()=>n,metadata:()=>k,toc:()=>i});var r=a(7462),l=(a(7294),a(3905));const n={sidebar_position:2},s="2. T\xe9tel: Lexik\xe1lis egys\xe9gek",k={unversionedId:"exam/informatika/2",id:"exam/informatika/2",title:"2. T\xe9tel: Lexik\xe1lis egys\xe9gek",description:"Lexik\xe1lis egys\xe9gek.",source:"@site/docs/exam/informatika/2.md",sourceDirName:"exam/informatika",slug:"/exam/informatika/2",permalink:"/docs/exam/informatika/2",draft:!1,editUrl:"https://github.com/vbartalis/vbartalis.github.io/tree/master/docs/exam/informatika/2.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"1. T\xe9tel: Adatb\xe1zisrendszerek",permalink:"/docs/exam/informatika/1"},next:{title:"3. T\xe9tel: Objektumorient\xe1lt paradigma",permalink:"/docs/exam/informatika/3"}},o={},i=[{value:"Lexik\xe1lis egys\xe9gek.",id:"lexik\xe1lis-egys\xe9gek",level:2},{value:"Adatt\xedpusok.",id:"adatt\xedpusok",level:2},{value:"Neves\xedtett konstans.",id:"neves\xedtett-konstans",level:2},{value:"V\xe1ltoz\xf3.",id:"v\xe1ltoz\xf3",level:2},{value:"Kifejez\xe9sek.",id:"kifejez\xe9sek",level:2},{value:"Utas\xedt\xe1sok.",id:"utas\xedt\xe1sok",level:2},{value:"Programegys\xe9gek.",id:"programegys\xe9gek",level:2},{value:"Param\xe9terki\xe9rt\xe9kel\xe9s, param\xe9ter\xe1tad\xe1s.",id:"param\xe9terki\xe9rt\xe9kel\xe9s-param\xe9ter\xe1tad\xe1s",level:2},{value:"Param\xe9terki\xe9rt\xe9kel\xe9s",id:"param\xe9terki\xe9rt\xe9kel\xe9s",level:3},{value:"Param\xe9ter\xe1tad\xe1s",id:"param\xe9ter\xe1tad\xe1s",level:3},{value:"Blokk.",id:"blokk",level:2},{value:"Hat\xe1sk\xf6rkezel\xe9s, l\xe1that\xf3s\xe1g.",id:"hat\xe1sk\xf6rkezel\xe9s-l\xe1that\xf3s\xe1g",level:2},{value:"Absztrakt adatt\xedpus.",id:"absztrakt-adatt\xedpus",level:2},{value:"Kiv\xe9telkezel\xe9s.",id:"kiv\xe9telkezel\xe9s",level:2}],m={toc:i};function g(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"2-t\xe9tel-lexik\xe1lis-egys\xe9gek"},"2. T\xe9tel: Lexik\xe1lis egys\xe9gek"),(0,l.kt)("h2",{id:"lexik\xe1lis-egys\xe9gek"},"Lexik\xe1lis egys\xe9gek."),(0,l.kt)("p",null,"A lexik\xe1lis egys\xe9gek a program sz\xf6veg\xe9nek azon elemei, melyeket a ford\xedt\xf3 a lexik\xe1lis elemz\xe9s sor\xe1n felismer \xe9s tokeniz\xe1l. Fajt\xe1i a k\xf6vetkez\u0151k: t\xf6bbkarakteres szimb\xf3lum, szimbolikus nevek, c\xedmke, megjegyz\xe9s, liter\xe1lok."),(0,l.kt)("h2",{id:"adatt\xedpusok"},"Adatt\xedpusok."),(0,l.kt)("p",null,"Az adatabsztrakci\xf3 els\u0151 megjelen\xe9si form\xe1ja az adatt\xedpus, ami egy absztrakt programoz\xe1si eszk\xf6z, amely mindig m\xe1s, konkr\xe9t programoz\xe1si eszk\xf6z komponensek\xe9nt jelenik meg. Az adatt\xedpusnak neve van, ami egy azonos\xedt\xf3. A programoz\xe1si nyelvek egy r\xe9sze ismeri, m\xe1s r\xe9sze nem, eszerint t\xedpusos \xe9s nem t\xedpusos nyelvek. Egy adatt\xedpust h\xe1rom dolog hat\xe1roz meg, ",(0,l.kt)("strong",{parentName:"p"},"a tartom\xe1ny"),", ",(0,l.kt)("strong",{parentName:"p"},"a m\u0171veletek"),", ",(0,l.kt)("strong",{parentName:"p"},"reprezent\xe1ci\xf3"),"."),(0,l.kt)("p",null,"Az adatt\xedpusok tartom\xe1nya azokat az elemeket tartalmazza, amelyeket az adott t\xedpus\xfa konkr\xe9t programoz\xe1si eszk\xf6z f\xf6lvehet \xe9rt\xe9kk\xe9nt. Ezen tartom\xe1ny elemei jelenhetnek meg a programban liter\xe1lk\xe9nt."),(0,l.kt)("p",null,"Az adatt\xedpushoz hozz\xe1tartoznak a m\u0171veletek, amelyeket a tartom\xe1ny elemein v\xe9gre tudunk hajtani. Minden adatt\xedpus m\xf6g\xf6tt van egy megfelel\u0151 bels\u0151 \xe1br\xe1zol\xe1si m\xf3d."),(0,l.kt)("p",null,"A reprezent\xe1ci\xf3 az egyes t\xedpusok tartom\xe1ny\xe1ba tartoz\xf3 \xe9rt\xe9kek t\xe1rban val\xf3 megjelen\xe9s\xe9t hat\xe1rozza meg, azt, hogy az elemek h\xe1ny b\xe1jtra \xe9s milyen bitkombin\xe1ci\xf3ra k\xe9pz\u0151dnek le."),(0,l.kt)("h2",{id:"neves\xedtett-konstans"},"Neves\xedtett konstans."),(0,l.kt)("p",null,"Egy neves\xedtett konstansnak h\xe1rom komponense van (t\xedpus, n\xe9v, \xe9rt\xe9k). Musz\xe1j mindig deklar\xe1lni. Egy neves\xedtett konstans a neve \xe1lltal van reprezent\xe1lva a forr\xe1sk\xf3dban. A n\xe9v mindig egy \xe9rt\xe9k komponenst takar. Az \xe9rt\xe9k komponenst nem lehet v\xe1ltoztatni fut\xe1si id\u0151ben, a deklar\xe1l\xe1sn\xe1l eld\u0151lt az \xe9rt\xe9ke. A neves\xedtett konstans szerepe az, hogy engedj\xfck a programoz\xf3t, egy gyakran haszn\xe1lt \xe9rt\xe9knek egy j\xf3l le\xedr\xf3 nevet adni. Az el\u0151nye, hogy elegend\u0151 a deklar\xe1l\xe1sn\xe1l megv\xe1ltoztatni az \xe9rt\xe9k\xe9t, nem kell az \xf6sszes el\u0151fordul\xe1s\xe1n\xe1l v\xe1ltoztatni."),(0,l.kt)("h2",{id:"v\xe1ltoz\xf3"},"V\xe1ltoz\xf3."),(0,l.kt)("p",null,"A v\xe1ltoz\xf3 olyan azonos\xedt\xf3, amely az inform\xe1ci\xf3 ideiglenes t\xe1rol\xe1s\xe1ra szolg\xe1l. A program v\xe9grehajt\xe1sakor az adatokat v\xe1ltoz\xf3kban t\xe1roljuk. A v\xe1ltoz\xf3kban t\xe1rolt adatok a program fut\xe1sa k\xf6zben v\xe1ltozhatnak, m\xf3dosulhatnak. T\xedpusa lehet pl. string, integer, double."),(0,l.kt)("h2",{id:"kifejez\xe9sek"},"Kifejez\xe9sek."),(0,l.kt)("h2",{id:"utas\xedt\xe1sok"},"Utas\xedt\xe1sok."),(0,l.kt)("p",null,"Az utas\xedt\xe1sok alkotj\xe1k az elj\xe1r\xe1sorient\xe1lt nyelveken meg\xedrt programok olyan egys\xe9geit, amelyekkel egyr\xe9szt az algoritmusok egyes l\xe9p\xe9seit megadjuk, m\xe1sr\xe9szt a ford\xedt\xf3program ezek seg\xedts\xe9g\xe9vel gener\xe1lja a t\xe1rgyprogramot. K\xe9t nagy csoportjuk van: a deklar\xe1ci\xf3s \xe9s a v\xe9grehajthat\xf3 utas\xedt\xe1sok. A deklar\xe1ci\xf3s utas\xedt\xe1sok m\xf6g\xf6tt nem \xe1ll t\xe1rgyk\xf3d, teljes m\xe9rt\xe9kben a ford\xedt\xf3programnak sz\xf3lnak, att\xf3l k\xe9rnek valamilyen szolg\xe1ltat\xe1st, \xfczemm\xf3dot \xe1ll\xedtanak be, illetve a t\xe1rgyk\xf3d gener\xe1l\xe1s\xe1n\xe1l felhaszn\xe1lt inform\xe1ci\xf3kat szolg\xe1ltatnak. Alapvet\u0151en befoly\xe1solj\xe1k a t\xe1rgyk\xf3dot, de maguk nem ker\xfclnek leford\xedt\xe1sra. A programoz\xf3 a n\xe9vvel rendelkez\u0151 saj\xe1t programoz\xe1si eszk\xf6zeit tudja deklar\xe1lni. A v\xe9grehajthat\xf3 utas\xedt\xe1sokb\xf3l gener\xe1lja a ford\xedt\xf3program a t\xe1rgyk\xf3dot. \xc1ltal\xe1ban a magasszint\u0171 nyelvek v\xe9grehajthat\xf3 utas\xedt\xe1saib\xf3l t\xf6bb g\xe9pi k\xf3d\xfa utas\xedt\xe1s \xe1ll el\u0151."),(0,l.kt)("p",null,"Csoportos\xedt\xe1suk:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\xc9rt\xe9kad\xf3 utas\xedt\xe1s"),(0,l.kt)("li",{parentName:"ol"},"\xdcres utas\xedt\xe1s"),(0,l.kt)("li",{parentName:"ol"},"Ugr\xf3 utas\xedt\xe1s"),(0,l.kt)("li",{parentName:"ol"},"El\xe1gaztat\xf3 utas\xedt\xe1sok"),(0,l.kt)("li",{parentName:"ol"},"Ciklusszervez\u0151 utas\xedt\xe1sok"),(0,l.kt)("li",{parentName:"ol"},"H\xedv\xf3 utas\xedt\xe1s"),(0,l.kt)("li",{parentName:"ol"},"Vez\xe9rl\xe9s\xe1tad\xf3 utas\xedt\xe1sok"),(0,l.kt)("li",{parentName:"ol"},"I/O utas\xedt\xe1sok"),(0,l.kt)("li",{parentName:"ol"},"Egy\xe9b utas\xedt\xe1sok.")),(0,l.kt)("h2",{id:"programegys\xe9gek"},"Programegys\xe9gek."),(0,l.kt)("h2",{id:"param\xe9terki\xe9rt\xe9kel\xe9s-param\xe9ter\xe1tad\xe1s"},"Param\xe9terki\xe9rt\xe9kel\xe9s, param\xe9ter\xe1tad\xe1s."),(0,l.kt)("h3",{id:"param\xe9terki\xe9rt\xe9kel\xe9s"},"Param\xe9terki\xe9rt\xe9kel\xe9s"),(0,l.kt)("p",null,"Param\xe9terki\xe9rt\xe9kel\xe9s alatt \xe9rtj\xfck azt a folyamatot, amikor egy alprogram h\xedv\xe1s\xe1n\xe1l egym\xe1shoz rendel\u0151dnek a form\xe1lis- \xe9s aktu\xe1lis param\xe9terek, \xe9s meghat\xe1roz\xf3dnak azok az inform\xe1ci\xf3k, amelyek a param\xe9ter\xe1tad\xe1sn\xe1l a kommunik\xe1ci\xf3t szolg\xe1ltatj\xe1k. A param\xe9terki\xe9rt\xe9kel\xe9sn\xe9l mindig a form\xe1lis param\xe9ter lista az els\u0151dleges, ezt az alprogram specifik\xe1ci\xf3ja tartalmazza, egy darab van bel\u0151le. Aktu\xe1lis param\xe9ter lista viszont annyi lehet, ah\xe1nyszor megh\xedvjuk az alprogramot, ezeket rendelj\xfck a form\xe1lis param\xe9terlist\xe1hoz."),(0,l.kt)("h3",{id:"param\xe9ter\xe1tad\xe1s"},"Param\xe9ter\xe1tad\xe1s"),(0,l.kt)("p",null,"A param\xe9ter\xe1tad\xe1s az alprogramok \xe9s m\xe1s programegys\xe9gek k\xf6z\xf6tti kommunik\xe1ci\xf3 egy form\xe1ja. A param\xe9ter\xe1tad\xe1sn\xe1l mindig van egy h\xedv\xf3, ez tetsz\u0151leges programegys\xe9g \xe9s egy h\xedvott, amelyik mindig alprogram. K\xe9rd\xe9s, hogy melyik ir\xe1nyban \xe9s milyen inform\xe1ci\xf3 mozog."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\xc9rt\xe9k szerinti")," param\xe9ter\xe1tad\xe1sn\xe1l a form\xe1lis param\xe9tereknek van c\xedmkomponens\xfck a h\xedvott alprogram ter\xfclet\xe9n. Az aktu\xe1lis param\xe9ternek rendelkeznie kell \xe9rt\xe9kkomponenssel a h\xedv\xf3 oldalon. Ez az \xe9rt\xe9k meghat\xe1roz\xf3dik a param\xe9terki\xe9rt\xe9kel\xe9s folyam\xe1n, majd \xe1tker\xfcl a h\xedvott alprogram ter\xfclet\xe9n lefoglalt c\xedmkomponensre. A form\xe1lis param\xe9ter kap egy kezd\u0151\xe9rt\xe9ket, \xe9s az alprogram ezzel az \xe9rt\xe9kkel dolgozik a saj\xe1t ter\xfclet\xe9n. Az inform\xe1ci\xf3\xe1raml\xe1s egyir\xe1ny\xfa, a h\xedv\xf3t\xf3l a h\xedvott fel\xe9 ir\xe1nyul. A h\xedvott alprogram semmit sem tud a h\xedv\xf3r\xf3l, a saj\xe1t ter\xfclet\xe9n dolgozik. Mindig van egy \xe9rt\xe9km\xe1sol\xe1s, \xe9s ez az \xe9rt\xe9k tetsz\u0151leges bonyolults\xe1g\xfa lehet."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"C\xedm szerinti")," param\xe9ter\xe1tad\xe1sn\xe1l a form\xe1lis param\xe9tereknek nincs c\xedmkomponens\xfck a h\xedvott alprogram ter\xfclet\xe9n. Az aktu\xe1lis param\xe9ternek viszont rendelkeznie kell c\xedmkomponenssel a h\xedv\xf3 ter\xfclet\xe9n. Param\xe9terki\xe9rt\xe9kel\xe9skor meghat\xe1roz\xf3dik az aktu\xe1lis param\xe9ter c\xedme \xe9s \xe1tad\xf3dik a h\xedvott alprogramnak, ez lesz a form\xe1lis param\xe9ter c\xedmkomponense. Teh\xe1t a megh\xedvott alprogram a h\xedv\xf3 ter\xfclet\xe9n dolgozik. Az inform\xe1ci\xf3\xe1tad\xe1s k\xe9tir\xe1ny\xfa, az alprogram a h\xedv\xf3 ter\xfclet\xe9r\u0151l \xe1tvehet \xe9rt\xe9ket, \xe9s \xedrhat is oda, \xe1tny\xfal a h\xedv\xf3 ter\xfcletre. Id\u0151ben gyors, mert nincs \xe9rt\xe9km\xe1sol\xe1s, de vesz\xe9lyes lehet, mert a h\xedvott hozz\xe1f\xe9r a h\xedv\xf3 ter\xfclet\xe9n l\xe9v\u0151 inform\xe1ci\xf3khoz."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Eredm\xe9ny szerinti")," param\xe9ter\xe1tad\xe1sn\xe1l a form\xe1lis param\xe9ternek van c\xedmkomponense a h\xedvott alprogram ter\xfclet\xe9n, az aktu\xe1lis param\xe9ternek pedig lennie kell c\xedmkomponens\xe9nek. Param\xe9terki\xe9rt\xe9kel\xe9skor meghat\xe1roz\xf3dik az aktu\xe1lis param\xe9ter c\xedme \xe9s \xe1tad\xf3dik a h\xedvott alprogramnak, azonban az alprogram a saj\xe1t ter\xfclet\xe9n dolgozik, \xe9s csak m\u0171k\xf6d\xe9s\xe9nek befejeztekor m\xe1solja \xe1t a form\xe1lis param\xe9ter \xe9rt\xe9k\xe9t erre a c\xedmre. A kommunik\xe1ci\xf3 egyir\xe1ny\xfa, a h\xedvott\xf3l a h\xedv\xf3 fel\xe9 ir\xe1nyul. Van \xe9rt\xe9km\xe1sol\xe1s."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\xc9rt\xe9k-eredm\xe9ny szerinti")," param\xe9ter\xe1tad\xe1sn\xe1l a form\xe1lis param\xe9ternek vanc\xedmkomponense a h\xedvott ter\xfclet\xe9n \xe9s az aktu\xe1lis param\xe9ternek rendelkeznie kell \xe9rt\xe9k- \xe9sc\xedmkomponenssel. A param\xe9terki\xe9rt\xe9kel\xe9sn\xe9l meghat\xe1roz\xf3dik az aktu\xe1lis param\xe9ter \xe9rt\xe9ke \xe9sc\xedme \xe9s mindkett\u0151 \xe1tker\xfcl a h\xedvotthoz. Az alprogram a kapott \xe9rt\xe9kkel, mint kezd\u0151\xe9rt\xe9kkelkezd el dolgozni a saj\xe1t ter\xfclet\xe9n \xe9s a c\xedmet nem haszn\xe1lja. Miut\xe1n viszont befejez\u0151dik, norm\xe1lis param\xe9ter \xe9rt\xe9ke \xe1tm\xe1sol\xf3dik az aktu\xe1lis param\xe9ter c\xedm\xe9re. A kommunik\xe1ci\xf3 k\xe9tir\xe1ny\xfa, k\xe9tszer van \xe9rt\xe9km\xe1sol\xe1s."),(0,l.kt)("h2",{id:"blokk"},"Blokk."),(0,l.kt)("p",null,"Olyan programegys\xe9g, amely csak m\xe1sik programegys\xe9g belsej\xe9be helyezkedhet el, k\xfcls\u0151 szinten nem \xe1llhat. Form\xe1lisan van kezdete, t\xf6rzse \xe9s v\xe9ge. A kezdetet \xe9s a v\xe9get egy-egy speci\xe1lis karaktersorozat vagy alapsz\xf3 jelzi. A t\xf6rzsben lehetnek deklar\xe1ci\xf3s \xe9s v\xe9grehajthat\xf3 utas\xedt\xe1sok, nyelvt\u0151l f\xfcgg\u0151en tetsz\u0151legesen keverten vagy k\xfcl\xf6n deklar\xe1ci\xf3s \xe9s v\xe9grehajthat\xf3 r\xe9szekben. Nincs param\xe9tere, egyes nyelvekben lehet neve. Ez \xe1ltal\xe1ban a kezdet el\u0151tt \xe1ll\xf3 c\xedmke. B\xe1rhol elhelyezhet\u0151, ahol v\xe9grehajthat\xf3 utas\xedt\xe1s \xe1llhat."),(0,l.kt)("h2",{id:"hat\xe1sk\xf6rkezel\xe9s-l\xe1that\xf3s\xe1g"},"Hat\xe1sk\xf6rkezel\xe9s, l\xe1that\xf3s\xe1g."),(0,l.kt)("p",null,"A hat\xe1sk\xf6r a nevekhez kapcsol\xf3d\xf3 fogalom. Egy n\xe9v hat\xe1sk\xf6re alatt \xe9rtj\xfck a program sz\xf6veg\xe9nek azon r\xe9sz\xe9t, ahol az adott n\xe9v ugyanazt a programoz\xe1si eszk\xf6zt hivatkozza, teh\xe1t jelent\xe9se, felhaszn\xe1l\xe1si m\xf3dja, jellemz\u0151i azonosak."),(0,l.kt)("p",null,"A ",(0,l.kt)("strong",{parentName:"p"},"statikus hat\xe1sk\xf6rkezel\xe9s")," ford\xedt\xe1si id\u0151ben t\xf6rt\xe9nik, a ford\xedt\xf3program v\xe9gzi. Alapja a programsz\xf6veg programegys\xe9g szerkezete. Ha a ford\xedt\xf3 egy programegys\xe9gben tal\xe1l egy szabad nevet, akkor kil\xe9p a tartalmaz\xf3 programegys\xe9gbe, \xe9s megn\xe9zi, hogy a n\xe9v ott lok\xe1lis- e. Ha igen v\xe9ge a folyamatnak, ha nem, akkor tov\xe1bb l\xe9pked kifel\xe9, am\xedg meg nem tal\xe1lja lok\xe1lis n\xe9vk\xe9nt, vagy el nem jut a legk\xfcls\u0151 szintre. Ha ki\xe9rt a legk\xfcls\u0151 szintre, akkor vagy a mivel a programoz\xf3nak kellett volna deklar\xe1lnia a nevet, ez ford\xedt\xe1si hiba, vagy mivel ismeri az automatikus deklar\xe1ci\xf3t a nyelv, a ford\xedt\xf3 hozz\xe1rendeli a n\xe9vhez az attrib\xfatumokat. A n\xe9v ilyenkor a legk\xfcls\u0151 szint lok\xe1lis nevek\xe9nt \xe9rtelmez\u0151dik."),(0,l.kt)("p",null,"A ",(0,l.kt)("strong",{parentName:"p"},"dinamikus hat\xe1sk\xf6rkezel\xe9s")," fut\xe1si idej\u0171 tev\xe9kenys\xe9g, a futtat\xf3 rendszer v\xe9gzi. Alapja a h\xedv\xe1si l\xe1nc. Ha a futtat\xf3 rendszer egy programegys\xe9gben tal\xe1l egy szabad nevet, akkor a h\xedv\xe1si l\xe1ncon kereszt\xfcl kezd el visszal\xe9pkedni mindaddig, am\xedg meg nem tal\xe1lja lok\xe1lis n\xe9vk\xe9nt, vagy a h\xedv\xe1si l\xe1nc elej\xe9re nem \xe9r. Ez ut\xf3bbi esetben vagy fut\xe1si hiba keletkezik, vagy automatikus deklar\xe1ci\xf3 k\xf6vetkezik be. Dinamikus hat\xe1sk\xf6rkezel\xe9sn\xe9l egy n\xe9v hat\xe1sk\xf6re az a programegys\xe9g, amelyben deklar\xe1ltuk, \xe9s minden olyan programegys\xe9g, amely ezen programegys\xe9gb\u0151l indul\xf3 h\xedv\xe1si l\xe1ncban helyezkedik el, hacsak ott nem deklar\xe1ltuk \xfajra a nevet."),(0,l.kt)("h2",{id:"absztrakt-adatt\xedpus"},"Absztrakt adatt\xedpus."),(0,l.kt)("p",null,"Az adattipus az \xe9rt\xe9kek halmaz\xe1b\xf3l, \xe9s a m\u0171veletekb\u0151l \xe1ll. Att\xf3l absztrakt, hogy nem ismerj\xfck az adatokat t\xe1rol\xf3 adatszerkezetet, sem pedig a m\u0171veletek algoritmus\xe1t, csak a specifik\xe1ci\xf3juk defini\xe1lt. Absztrakt adattipus pl: Verem, Sor, Lista."),(0,l.kt)("h2",{id:"kiv\xe9telkezel\xe9s"},"Kiv\xe9telkezel\xe9s."),(0,l.kt)("p",null,"A java kiv\xe9telkezel\xe9s\xe9nek c\xe9lja a programfut\xe1s sor\xe1n keletkezett hib\xe1k kisz\u0171r\xe9se \xe9s megfelel\u0151 kezel\xe9se."))}g.isMDXComponent=!0}}]);